{"version":3,"sources":["NeverSleep/BlankLoop.mp4","contexts/socket.tsx","Counter.tsx","controls/NewTime.tsx","controls/NewBG.tsx","controls/UploadBGI.tsx","controls/TimerDisplay.tsx","controls/Overlay.tsx","Background.tsx","NeverSleep/NeverSleep.tsx","Title.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","socket","socketio","window","location","hostname","socketContext","React","createContext","Counter","props","useContext","globalState","updateGlobal","_useState","useState","size","_useState2","Object","slicedToArray","fontSize","setFontSize","_useState3","_useState4","systemTimeOffset","setOffset","_useState5","time","ping","_useState6","pingSent","setSent","_useState7","_useState8","pingRec","setRec","targetTime","_useState9","_useState10","timer","setTimer","_useState11","_useState12","seconds","setSeconds","_useState13","_useState14","minutes","setMinutes","_useState15","_useState16","hours","setHours","_useState17","_useState18","days","setDays","handleSocketConnect","useCallback","console","log","emit","old","Date","now","handleSocketPing","handleSocketTimer","data","concat","args","toString","toLowerCase","split","newtime","newsystime","Number","e","handleSocketDisplay","replace","length","colr","shift","ecol","etxt","join","color","endColor","endTxt","useEffect","current","on","off","_useState19","_useState20","clock","setClock","thetime","unclamped","Math","floor","maxclamp","max","minclamp","min","setTimeout","widthUpdateSize","newFontSize","innerWidth","addEventListener","react_default","a","createElement","className","id","style","padStart","NewTime","persisted","persistState","uDays","uHours","uMinutes","uSeconds","timeOpt","timeOption","setTO","setTT","updated","sentPing","setSP","serv_time","recPing","setRP","changePersist","changeState","handleSPing","servertime","incH","incM","incS","decH","decM","decS","newTime","handlePersistState","values","handleChangeSet","event","target","checked","getHours","getMinutes","getSeconds","subDay","addDay","d","newDate","getMilliseconds","x","y","startPos","setStartPos","difference","setDifference","_useState21","_useState22","dragTarget","setdT","_useState23","_useState24","dragSeconds","setDragSeconds","_useState25","_useState26","dragMinutes","setDragMinutes","_useState27","_useState28","dragHours","setDragHours","_useState29","_useState30","dragDays","setDragDays","dragMoveEvent","touches","clientX","clientY","dragEnd","upTarget","sideTarget","i","abs","onSubmit","preventDefault","closeOverlay","type","name","value","onChange","defaultChecked","htmlFor","onWheel","deltaY","onTouchStart","onTouchMove","onTouchEnd","onClick","getMonth","getDate","NewBG","useImg","setUI","imageaddr","setIMGA","solidColor","setColor","bgHorizontal","fitHorizontal","setHorizontal","ToggleImage","src","alt","newVal","inVal","substring","backgroundColor","UploadBGI","selectedFile","setSelected","fileName","setFileName","fileSize","setFileSize","fileType","setFileType","times","setTimes","horiz","updatePersist","update","handleSConnect","handleSDisconnect","reason","fileSelectionChange","t","files","file","handleSubmission","undefined","formData","FormData","append","fetch","method","body","then","result","ok","catch","error","fitHorizChange","accept","TimerDisplay","global","textSize","setSize","textColor","setETXT","title","setTitle","setEColor","titleColor","setTColor","submitComplete","setComplete","filled","setFilled","submission","typing","handleSelected","handleDeselected","textboxes","document","getElementsByClassName","txtbox","item","disabled","Overlay","toggle","setToggle","created","setCreated","cooldown","setCooldown","useShortWidth","setUSW","panelNum","setPN","innerHeight","bInFullScreen","setBIF","newTimeState","setTimeState","newBGState","setBGState","fontColor","newTimerDisp","setTimerDisp","clickevent","key","exitFullscreen","removeEventListener","getToggle","updateTimePersist","updateBGPersist","updateBGUPersist","updateTimerDisp","fontCol","handlePanelRight","panelAmt","handlePanelLeft","requestFullscreen","controls_NewTime","controls_NewBG","controls_UploadBGI","controls_TimerDisplay","Background","bgUseImage","bgImage","setImage","bgSolid","setSolid","handleSBGChange","handleSBGHU","isTrue","width","height","NeverSleep","video","autoPlay","loop","muted","Title","handleSTitle","newtxt","Container","setGlobalState","Array","newChanges","setNC","changing","setChanging","toConsumableArray","anyGlobal","temp","keys","forEach","changeGlobal","Provider","NeverSleep_NeverSleep","src_Background","Counter_Counter","controls_Overlay","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.1fe35d28.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BlankLoop.84d5fa3a.mp4\";","import * as socketio from \"socket.io-client\";\r\nimport React from \"react\";\r\n//export const socket = socketio.connect(window.location.hostname+\":\"+window.location.port);\r\nexport const socket = socketio.connect(window.location.hostname+\":3002\");\r\nexport const socketContext = React.createContext(socket);","import React, { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport { socketContext } from \"./contexts/socket\";\r\nimport './styles/Counter.css';\r\n\r\nexport default function Counter(props: any) {\r\n    const socket = useContext(socketContext);\r\n\r\n    const globalState: any = props.globalState;\r\n    const updateGlobal: (props: any) => void = props.updateGlobal;\r\n\r\n    const [fontSize,setFontSize] = useState(globalState.size);\r\n    \r\n    // Initialize Ping-Based Synchronisation Variables\r\n\r\n    const [systemTimeOffset,setOffset] = useState(0); // Overall delay\r\n    const [pingSent,setSent] = useState({ time: 0, ping: 0 }); // Ping Sent time.\r\n    const [pingRec,setRec] = useState({ time: 0, ping: 0 }); // Ping Recieved time\r\n\r\n    // Initialize Time Variables\r\n\r\n    const targetTime = globalState.targetTime;\r\n    const [timer,setTimer] = useState(0);\r\n    const [seconds,setSeconds] = useState(0);\r\n    const [minutes,setMinutes] = useState(0);\r\n    const [hours,setHours] = useState(0);\r\n    const [days,setDays] = useState(0);\r\n\r\n    // Socket Listener Functions\r\n\r\n    const handleSocketConnect = useCallback(() => {\r\n        console.log(`Socket Connected.`);\r\n        socket.emit(`updatetimer`,`query`);\r\n        socket.emit(`updatedisp`,`query`);\r\n        socket.emit(`ping`,``);\r\n        setSent(old => { return { time: Date.now(), ping: old.ping+1 } });\r\n    },[socket])\r\n\r\n    const handleSocketPing = useCallback(() => { setRec(old => { return { time: Date.now(), ping: old.ping+1 } }) },[]);\r\n\r\n    const handleSocketTimer = useCallback((data: any) => {\r\n        console.log(`[TIMER EVENT]: ${data}`);\r\n        let args = data.toString().toLowerCase().split(\" \");\r\n        let newtime: number = Date.now(); // Time to count down to\r\n        let newsystime: number = Date.now(); // Current Time on the server\r\n        try {\r\n          newtime = Number(args[0]);\r\n          newsystime = Number(args[1]);\r\n        } catch(e) {\r\n          console.log(`Failed to convert \\`${data}\\` to Numbers`);\r\n        }\r\n        updateGlobal({ targetTime: newtime });\r\n        setOffset(Date.now()-newsystime); // Correct for offset in UTC between devices\r\n    },[setOffset])\r\n\r\n    const handleSocketDisplay = useCallback((data: any) => {\r\n        console.log(`Display Information: ${data}`);\r\n        let args = data.split(\" \");\r\n        try {\r\n          Number(args[1]);\r\n        } catch(e) {\r\n          console.log(`Couldn't interpet display information from server command: ${data}`);\r\n          return;\r\n        }\r\n        args[0] = args[0].replace('#','');\r\n        if(!((args[0].length === 3) || (args[0].length === 4) || (args[0].length === 6) || (args[0].length === 8))) {\r\n          console.log(`Couldn't get colour information from server command: ${data}`);\r\n          return;\r\n        }\r\n        args[2] = args[2].replace('#','');\r\n        if(!((args[2].length === 3) || (args[2].length === 4) || (args[2].length === 6) || (args[2].length === 8))) {\r\n          console.log(`Couldn't get colour information from server command: ${data}`);\r\n          return;\r\n        }\r\n        let colr = args.shift();\r\n        let size = Number(args.shift());\r\n        let ecol = args.shift();\r\n        let etxt = args.join(\" \");\r\n        updateGlobal({ color: colr, size: size, endColor: ecol, endTxt: etxt });\r\n    },[])\r\n\r\n    // Handle Ping\r\n\r\n    useEffect(() => {\r\n        if(pingSent.ping === pingRec.ping) {\r\n            // Subtract ping from time difference. Hypothetically giving exact difference between client and server UTC\r\n            // to be subtracted from countdown time, allowing near perfect synchronisation across devices.\r\n            setOffset(current => current-((pingRec.time-pingSent.time)/2));\r\n            console.log(`Round Trip Ping: ${pingRec.time - pingSent.time}ms`);\r\n        }\r\n    },[pingSent,pingRec])\r\n\r\n    // Initialize Socket Listeners\r\n\r\n    useEffect(() => {\r\n        socket.on(`connect`, handleSocketConnect);\r\n        socket.on(`ping`, handleSocketPing);\r\n        socket.on(`timer`, handleSocketTimer);\r\n        socket.on(`display`, handleSocketDisplay);\r\n        return () => {\r\n            socket.off('connect', handleSocketConnect);\r\n            socket.off('ping', handleSocketPing);\r\n            socket.off('timer', handleSocketTimer);\r\n            socket.off(`display`, handleSocketDisplay);\r\n        }\r\n    },[socket,handleSocketConnect,handleSocketPing,handleSocketTimer,handleSocketDisplay]);\r\n\r\n    // Counting\r\n\r\n    const [clock,setClock] = useState(false);\r\n    useEffect(() => {\r\n        let thetime = Date.now()+0.5-systemTimeOffset;\r\n        let unclamped = 1000-(thetime/1000-(Math.floor(thetime/1000)))*1000;\r\n        let maxclamp = Math.max(unclamped, 300);\r\n        let minclamp = Math.min(maxclamp, 1500); // 1000ms - offset from last second\r\n        setTimeout(()=>{\r\n            setClock(!clock);\r\n            setTimer(Math.floor((targetTime-thetime)/1000));\r\n        },minclamp);\r\n    },[clock,targetTime,systemTimeOffset,setClock,setTimer])\r\n\r\n    useEffect(() => {\r\n        let thetime = Date.now()+0.5-systemTimeOffset;\r\n        setTimer(Math.floor((targetTime-thetime)/1000));\r\n    },[systemTimeOffset,targetTime])\r\n\r\n    // Update counters on timer change.\r\n\r\n    useEffect(() => {\r\n      setDays(Math.floor(timer/(3600*24)));\r\n      setHours(Math.floor(timer/3600)-(Math.floor(timer/(3600*24))*24));\r\n      setMinutes(Math.floor(timer/60)-(Math.floor(timer/3600)*60));\r\n      setSeconds(timer%60);\r\n    },[setDays,setHours,setMinutes,setSeconds,timer])\r\n\r\n    // Update size on width change\r\n\r\n    const widthUpdateSize = useCallback(() => {\r\n        let newFontSize: number = (window.innerWidth/96)*globalState.size;\r\n        setFontSize(newFontSize);\r\n    },[setFontSize,globalState])\r\n\r\n    window.addEventListener('resize',widthUpdateSize)\r\n\r\n    // Global State Change Effect\r\n\r\n    useEffect(() => { widthUpdateSize(); },[globalState,widthUpdateSize])\r\n\r\n    // Rendering The Component\r\n\r\n    if(timer >= 0) {\r\n        return (\r\n            <div className=\"counter\">\r\n                <span id=\"timer\" style={{ fontSize: `${fontSize}px`, color: `#${globalState.color}` }}>\r\n                    {(days > 0)?(days.toString().padStart(2,\"0\")+\":\"):\"\"}\r\n                    {((days > 0) || (hours > 0))?(hours.toString().padStart(2,\"0\")+\":\"):\"\"}\r\n                    {((days > 0) || (hours > 0) || (minutes > 0))?(minutes.toString().padStart(2,\"0\")+\":\"):\"\"}\r\n                    {((days > 0) || (hours > 0) || (minutes > 0))?(seconds.toString().padStart(2,\"0\")):(seconds.toString())}\r\n                </span>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"counter\">\r\n                <span id=\"timer\" style={{ fontSize: `${fontSize}px`, color: `#${globalState.endColor}` }}>{globalState.endTxt}</span>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { useContext, useEffect, useState, useCallback } from \"react\";\r\nimport { socketContext } from \"../contexts/socket\";\r\n\r\nfunction NewTime(props: any) {\r\n\r\n    const persisted: { days: number, hours: number, minutes: number, seconds: number, timeOpt: number } = props.persistState;\r\n    const globalState: any = props.globalState;\r\n    const updateGlobal: (props: any) => void = props.updateGlobal;\r\n\r\n    const [uDays,setDays] = useState(persisted.days);\r\n    const [uHours,setHours] = useState(persisted.hours);\r\n    const [uMinutes,setMinutes] = useState(persisted.minutes);\r\n    const [uSeconds,setSeconds] = useState(persisted.seconds);\r\n    const socket = useContext(socketContext);\r\n    const [timeOption,setTO] = useState(persisted.timeOpt);\r\n    const [targetTime,setTT] = useState(new Date(globalState.targetTime));\r\n\r\n    const [sentPing,setSP] = useState({ time: 0, updated: false });\r\n    const [recPing,setRP] = useState({ time: 0, updated: false, serv_time: 0 });\r\n\r\n    const months = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\"\r\n    ]\r\n\r\n    const changePersist: (days: number, hours: number, minutes: number, seconds: number, timeOpt: number) => void = props.changeState;\r\n\r\n    const handleSPing = useCallback((servertime: number) => {\r\n        setRP({ time: Date.now(), updated: true, serv_time: servertime });\r\n    },[setRP]);\r\n\r\n    useEffect(()=>{\r\n        if(sentPing.updated && recPing.updated) {\r\n            let newTime = Date.now()+((recPing.serv_time-Date.now())-(recPing.time-sentPing.time));\r\n\r\n            newTime += uDays*1000*60*60*24;\r\n            newTime += uHours*1000*60*60;\r\n            newTime += uMinutes*1000*60;\r\n            newTime += uSeconds*1000;\r\n\r\n            socket.emit(`updatetimer`,`set ${newTime}`);\r\n\r\n            setSP({ time: 0, updated: false });\r\n            setRP({ time: 0, updated: false, serv_time: 0 });\r\n        }\r\n    },[sentPing,recPing,uDays,uHours,uMinutes,uSeconds,socket])\r\n\r\n    function handleSubmit(e: any) {\r\n        e.preventDefault();\r\n        if(timeOption === 0) {\r\n            socket.emit(`ping`,`ping`);\r\n            setSP({ time: Date.now(), updated: true });\r\n            props.closeOverlay();\r\n        }\r\n        if(timeOption === 1) {\r\n            let time = new Date();\r\n            let newTime: number = Date.now();\r\n            \r\n            newTime -= time.getHours()*1000*60*60;\r\n            newTime -= time.getMinutes()*1000*60;\r\n            newTime -= time.getSeconds()*1000;\r\n            newTime -= time.getMilliseconds();\r\n\r\n            newTime += uDays*1000*60*60*24;\r\n            newTime += uHours*1000*60*60;\r\n            newTime += uMinutes*1000*60;\r\n            newTime += uSeconds*1000;\r\n\r\n            if(newTime < Date.now()) {\r\n                newTime += 1000*60*60*24;\r\n            }\r\n\r\n            socket.emit(`updatetimer`,`set ${newTime}`);\r\n            updateGlobal({ targetTime: newTime });\r\n            props.closeOverlay();\r\n        }\r\n    };\r\n\r\n    function incH() { if(uHours+1 > 23) { setHours(0); } else setHours(uHours+1); };\r\n    function incM() { if(uMinutes+1 > 59) { setMinutes(0); incH(); } else setMinutes(uMinutes+1); };\r\n    function incS() { if(uSeconds+1 > 59) { setSeconds(0); incM(); } else setSeconds(uSeconds+1); };\r\n    function decH() { if(uHours-1 < 0) { setHours(23); } else setHours(uHours-1); };\r\n    function decM() { if(uMinutes-1 < 0) { setMinutes(59); decH(); } else setMinutes(uMinutes-1); };\r\n    function decS() { if(uSeconds-1 < 0) { setSeconds(59); decM(); } else setSeconds(uSeconds-1); };\r\n\r\n    const handlePersistState = useCallback((values: {\"days\": number, \"hours\": number, \"minutes\": number, \"seconds\": number, \"timeOpt\": number}) => {\r\n        changePersist( values.days, values.hours, values.minutes, values.seconds, values.timeOpt )\r\n    },[changePersist])\r\n\r\n    const handleChangeSet = useCallback((event: any) => {\r\n        if(event.target.checked) {\r\n            let now = new Date();\r\n            setHours(now.getHours());\r\n            setMinutes(now.getMinutes())\r\n            setSeconds(now.getSeconds());\r\n            setTO(1);\r\n        } else {\r\n            setDays(0);\r\n            setHours(0);\r\n            setMinutes(0);\r\n            setSeconds(0);\r\n            setTO(0);\r\n        }\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        socket.on(`ping`,handleSPing);\r\n        return () => {\r\n            socket.off(`ping`,handleSPing);\r\n        }\r\n    },[socket,handleSPing])\r\n\r\n    const subDay = useCallback(() => {\r\n        if(uDays > 0)\r\n            setDays(uDays-1);\r\n        \r\n    },[setDays,uDays])\r\n\r\n    const addDay = useCallback(() => {\r\n        setDays(d => d+1);\r\n    },[setDays])\r\n\r\n    useEffect(() => {\r\n        handlePersistState({\r\n            \"days\": uDays,\r\n            \"hours\": uHours,\r\n            \"minutes\": uMinutes,\r\n            \"seconds\": uSeconds,\r\n            \"timeOpt\": timeOption\r\n        });\r\n\r\n        let newDate = new Date();\r\n        let newTime = Date.now();\r\n\r\n        newTime -= (newDate.getHours()*1000*60*60);\r\n        newTime -= (newDate.getMinutes()*1000*60);\r\n        newTime -= (newDate.getSeconds()*1000);\r\n        newTime -= (newDate.getMilliseconds());\r\n        \r\n        newTime += uDays*1000*60*60*24;\r\n        newTime += uHours*1000*60*60;\r\n        newTime += uMinutes*1000*60;\r\n        newTime += uSeconds*1000;\r\n\r\n        if(timeOption === 1 && ((newTime-Date.now()) < 0)) setDays(d => d+1);\r\n\r\n        setTT(new Date(newTime));\r\n    },[uDays,uHours,uMinutes,uSeconds,timeOption,handlePersistState,setTT,setDays]);\r\n\r\n    function addDayWheel(event: any) {\r\n        if(event.deltaY > 0) subDay();\r\n        else addDay();\r\n    }\r\n\r\n    function addHourWheel(event: any) {\r\n        if(event.deltaY > 0) decH();\r\n        else incH();\r\n    }\r\n\r\n    function addMinuteWheel(event: any) {\r\n        if(event.deltaY > 0) decM();\r\n        else incM();\r\n    }\r\n\r\n    function addSecondWheel(event: any) {\r\n        if(event.deltaY > 0) decS();\r\n        else incS();\r\n    }\r\n\r\n    const [startPos,setStartPos] = useState({ x: 0, y: 0 });\r\n    const [difference,setDifference] = useState({ x: 0, y: 0 });\r\n    const [dragTarget,setdT] = useState(0);\r\n    \r\n    const [dragSeconds,setDragSeconds] = useState({ current: 0, target: 0 });\r\n    const [dragMinutes,setDragMinutes] = useState({ current: 0, target: 0 });\r\n    const [dragHours,setDragHours] = useState({ current: 0, target: 0 });\r\n    const [dragDays,setDragDays] = useState({ current: 0, target: 0 });\r\n\r\n    function secondDragStart(event: any) {\r\n        setStartPos({ x: event.touches[0].clientX, y: event.touches[0].clientY });\r\n        setDragSeconds({ current: 0, target: 0 });\r\n        setdT(1);\r\n    }\r\n\r\n    function minuteDragStart(event: any) {\r\n        setStartPos({ x: event.touches[0].clientX, y: event.touches[0].clientY });\r\n        setDragMinutes({ current: 0, target: 0 });\r\n        setdT(2);\r\n    }\r\n\r\n    function hourDragStart(event: any) {\r\n        setStartPos({ x: event.touches[0].clientX, y: event.touches[0].clientY });\r\n        setDragHours({ current: 0, target: 0 });\r\n        setdT(3);\r\n    }\r\n\r\n    function dayDragStart(event: any) {\r\n        setStartPos({ x: event.touches[0].clientX, y: event.touches[0].clientY });\r\n        setDragDays({ current: 0, target: 0 });\r\n        setdT(4);\r\n    }\r\n\r\n    function dragMoveEvent(event: any) { setDifference({ x: (event.touches[0].clientX-startPos.x), y: (event.touches[0].clientY-startPos.y) }); };\r\n    function dragEnd(event: any) { setdT(0); };\r\n\r\n    useEffect(() => {\r\n        let upTarget = Math.floor(difference.y/-20);\r\n        let sideTarget = Math.floor(difference.x/20);\r\n        switch(dragTarget) {\r\n            case(1):\r\n                for(let i = 0; i < Math.abs(dragSeconds.current-upTarget); i++) {\r\n                    if(dragSeconds.current < upTarget) { incS(); }\r\n                    else { decS(); }\r\n                } setDragSeconds({ current: upTarget, target: upTarget });\r\n                break;\r\n            case(2):\r\n                for(let i = 0; i < Math.abs(dragMinutes.current-upTarget); i++) {\r\n                    if(dragMinutes.current < upTarget) { incM(); }\r\n                    else { decM(); }\r\n                } setDragMinutes({ current: upTarget, target: upTarget });\r\n                break;\r\n            case(3):\r\n                for(let i = 0; i < Math.abs(dragHours.current-upTarget); i++) {\r\n                    if(dragHours.current < upTarget) { incH(); }\r\n                    else { decH(); }\r\n                } setDragHours({ current: upTarget, target: upTarget });\r\n                break;\r\n            case(4):\r\n                for(let i = 0; i < Math.abs(dragDays.current-sideTarget); i++) {\r\n                    if(dragDays.current < sideTarget) { addDay(); }\r\n                    else { subDay(); }\r\n                } setDragDays({ current: sideTarget, target: sideTarget });\r\n                break;\r\n        }\r\n        \r\n    },[difference])\r\n\r\n    return (\r\n        <div className=\"timeSetter\">\r\n            <div className=\"control-titlebox\"><span>Timer Controls</span></div>\r\n            <form className=\"TS-opt\" onSubmit={handleSubmit}>\r\n                <div><input type=\"checkbox\" id=\"ts-opt-1-1\" name={\"ts-opt-1\"} value={\"TFN\"} onChange={handleChangeSet} defaultChecked={(timeOption === 1)}/><label htmlFor=\"ts-opt-1-1\">Set Specific Time</label><br/></div>\r\n                <div className=\"TS-day_select\" onWheel={addDayWheel} onTouchStart={dayDragStart} onTouchMove={dragMoveEvent} onTouchEnd={dragEnd}>\r\n                    <div className=\"TS-day_sub\" onClick={subDay}><span>-</span></div>\r\n                    <div className=\"TS-day_indicator\">\r\n                        {(timeOption === 1)?(<span>{months[targetTime.getMonth()]+\" \"+targetTime.getDate()}</span>):(<span>{uDays} Days</span>)}\r\n                    </div>\r\n                    <div className=\"TS-day_add\" onClick={addDay}><span>+</span></div>\r\n                </div>\r\n                <div className=\"TS-timesel\">\r\n                    <div className=\"TS-sel\" onWheel={addHourWheel} onTouchStart={hourDragStart} onTouchMove={dragMoveEvent} onTouchEnd={dragEnd}>\r\n                        <div className=\"TS-uparrow\" onClick={incH}></div>\r\n                        <span className=\"TS-h\">{uHours.toString().padStart(2,'0')}</span>\r\n                        <div className=\"TS-downarrow\" onClick={decH}></div>\r\n                    </div>\r\n                    <span className=\"TS-selsplitter\">:</span>\r\n                    <div className=\"TS-sel\" onWheel={addMinuteWheel} onTouchStart={minuteDragStart} onTouchMove={dragMoveEvent} onTouchEnd={dragEnd}>\r\n                        <div className=\"TS-uparrow\" onClick={incM}></div>\r\n                        <span className=\"TS-h\">{uMinutes.toString().padStart(2,'0')}</span>\r\n                        <div className=\"TS-downarrow\" onClick={decM}></div>\r\n                    </div>\r\n                    <span className=\"TS-selsplitter\">:</span>\r\n                    <div className=\"TS-sel\" onWheel={addSecondWheel} onTouchStart={secondDragStart} onTouchMove={dragMoveEvent} onTouchEnd={dragEnd}>\r\n                        <div className=\"TS-uparrow\" onClick={incS}></div>\r\n                        <span className=\"TS-h\">{uSeconds.toString().padStart(2,'0')}</span>\r\n                        <div className=\"TS-downarrow\" onClick={decS}></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <input type=\"submit\" value={\"Set Timer\"} className={\"TS-submit\"}></input>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewTime;","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { socketContext } from \"../contexts/socket\";\r\n\r\nfunction NewBG(props: any) {\r\n    const persisted: { useImg: boolean, imageaddr: string, solidColor: string, fitHorizontal: boolean } = props.persistState;\r\n    const globalState: any = props.globalState;\r\n    const updateGlobal: (props: any) => void = props.updateGlobal;\r\n\r\n    const [useImg,setUI] = useState(persisted.useImg);\r\n    const [imageaddr,setIMGA] = useState(persisted.imageaddr);\r\n    const [solidColor,setColor] = useState(persisted.solidColor);\r\n    const [fitHorizontal,setHorizontal] = useState(globalState.bgHorizontal);\r\n    const socket = useContext(socketContext);\r\n\r\n    const changePersist: ( useImg: boolean, imageaddr: string, solidColor: string, fitHorizontal: boolean ) => void = props.changeState;\r\n\r\n    useEffect(() => {\r\n        changePersist(useImg, imageaddr, solidColor, fitHorizontal);\r\n    },[changePersist,useImg,imageaddr,solidColor,fitHorizontal]);\r\n\r\n    function ToggleImage(event: any) { setUI(event.target.checked); }\r\n    function IMGAC(event: any) { setIMGA(event.target.value); }\r\n    function SOLIDCC(event: any) {\r\n        let newVal: string = \"\";\r\n        let inVal: string = event.target.value;\r\n        if(inVal.length > 8) { inVal = `${inVal.substring(0,8)}${inVal[inVal.length-1]}`; }\r\n        newVal = inVal.replace(/[^0-9a-f]+/gi,'');\r\n        setColor(newVal);\r\n    }\r\n\r\n    function submission(event: any) {\r\n        event.preventDefault();\r\n        if(!useImg) {\r\n            if(solidColor !== \"\") {\r\n                console.log(`Requesting Solid Colour Background.`);\r\n                socket.emit(`background`,`set bgi ${useImg} ${solidColor}`);\r\n            }\r\n        } else {\r\n            console.log(`Requesting Image Background.`);\r\n            socket.emit(`background`,`set bgi ${useImg} ${imageaddr}`);\r\n        }\r\n    }\r\n\r\n    function HorizontalFit(event: any) {\r\n        socket.emit(`background`,`set bgh ${event.target.checked}`);\r\n        setHorizontal(event.target.checked);\r\n        updateGlobal({ bgHorizontal: event.target.checked });\r\n    }\r\n\r\n    return (\r\n        <div className=\"newbg\">\r\n            <div className=\"control-titlebox\">\r\n                <span>Background Controls</span>\r\n            </div>\r\n            <form className=\"TS-opt\" onSubmit={submission}>\r\n                {(useImg)?(\r\n                    <div>\r\n                        <input type=\"checkbox\" name={\"Use Images\"} id={\"ts-opt-2-1\"} onChange={ToggleImage} defaultChecked={useImg} />\r\n                        <label htmlFor={\"ts-opt-2-1\"}>Use Image</label><br/>\r\n                        <input type=\"checkbox\" name={\"Horizontal\"} id={\"ts-opt-2-2\"} onChange={HorizontalFit} defaultChecked={fitHorizontal} />\r\n                        <label htmlFor={\"ts-opt-2-2\"}>Fit Horizontal</label>\r\n                    </div>\r\n                ):(\r\n                    <div>\r\n                        <input type=\"checkbox\" name={\"Use Images\"} id={\"ts-opt-2-1\"} onChange={ToggleImage} defaultChecked={useImg}/>\r\n                        <label htmlFor={\"ts-opt-2-1\"}>Use Image</label><br/>\r\n                    </div>\r\n                )}\r\n                {((useImg)?(\r\n                    <div className=\"newbg_image_select\">\r\n                        <div className=\"newbg_image_textbox_container\">\r\n                            <input type=\"text\" value={imageaddr} onChange={IMGAC} className=\"newbg_image_textbox\" />\r\n                        </div>\r\n                        <div className=\"newbg_image_container\">\r\n                            <img src={imageaddr} className=\"newbg_image_preview\" alt={\"Background\"}/>\r\n                        </div>\r\n                    </div>\r\n                ):(\r\n                    <div className=\"newbg_solid_select\">\r\n                        <div><span>#</span><input type=\"text\" className=\"newbg_solid_textbox\" value={solidColor} onChange={SOLIDCC}></input></div>\r\n                        {(solidColor.length === 3 || solidColor.length === 4 || solidColor.length === 6 || solidColor.length === 8)?(\r\n                            <div className=\"newbg_solid_indicator\" style={{ backgroundColor: `#${solidColor}` }}>00:00:00</div>\r\n                        ):(\r\n                            <div className=\"newbg_indicator_fail\">\r\n                                <span className=\"redtext\">INVALID HEX</span>\r\n                                <span className=\"newbg_indicator_explain\">Hex should be 3,4,6 or 8 character long hexadecimal digits. [0-9 and a-f]</span>\r\n                                <span className=\"newbg_indicator_explain\">e.g. 0f0fff, 12ab34cd</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n                <input type=\"submit\" className=\"newbg-submit\" value={\"Set Background\"}/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBG;","import React, { useContext, useCallback, useEffect, useState, SetStateAction, Dispatch } from \"react\";\r\nimport { socketContext } from \"../contexts/socket\";\r\n\r\nfunction UploadBGI(props: any) {\r\n    const socket = useContext(socketContext);\r\n    \r\n    const globalState: any = props.globalState;\r\n    const updateGlobal: () => void = props.updateGlobal;\r\n\r\n    const [selectedFile, setSelected]: [(string | Blob | undefined), Dispatch<SetStateAction<(string | Blob | undefined)>>] = useState();\r\n\r\n    const [fileName,setFileName] = useState(\"\");\r\n    const [fileSize,setFileSize] = useState(0);\r\n    const [fileType,setFileType] = useState(\"\");\r\n\r\n    const [times,setTimes] = useState(0);\r\n\r\n    const [fitHorizontal,setHorizontal] = useState(props.horiz);\r\n    const updatePersist: (state: boolean) => void = props.update;\r\n\r\n    const handleSConnect = useCallback(() => {\r\n        console.log(`[Background Uploader] Connected to server.`);\r\n    },[])\r\n\r\n    const handleSDisconnect = useCallback((reason: any) => {\r\n        console.log(`[Background Uploader] Disconnected from server. [${reason}]`);\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        socket.on('connect',handleSConnect);\r\n        socket.on('disconnect',handleSDisconnect);\r\n        return () => {\r\n            socket.off('connect',handleSConnect);\r\n            socket.off('disconnect',handleSDisconnect);\r\n        };\r\n    },[socket,handleSConnect,handleSDisconnect])\r\n\r\n    const fileSelectionChange = useCallback((event: any) => {\r\n        setTimes(t => t+1);\r\n        if(event.target.files.length === 0) return;\r\n        let file = event.target.files[0];\r\n        setSelected(file);\r\n        setFileName(file.name);\r\n        setFileSize(file.size);\r\n        setFileType(file.type);\r\n    },[])\r\n\r\n    const handleSubmission = useCallback((event: any) => {\r\n        event.preventDefault();\r\n        if(selectedFile === undefined) return;\r\n        const formData = new FormData();\r\n        formData.append('File',selectedFile);\r\n        fetch(\r\n            `http://${window.location.hostname}:3002/upload/`,\r\n            {\r\n                method: 'POST',\r\n                body: formData,\r\n            }\r\n        )\r\n            .then((result) => {\r\n                console.log(`${(result.ok)?(\"File Uploaded Successfully.\"):(\"File failed to upload.\")}`);\r\n            })\r\n            .catch((error) => {\r\n                console.log(`There was an Error: ${error}`);\r\n            });\r\n    },[selectedFile])\r\n\r\n    const fitHorizChange = useCallback((event: any) => {\r\n        socket.emit(`background`,`set bgh ${event.target.checked}`);\r\n        setHorizontal(event.target.checked);\r\n        updatePersist(event.target.checked);\r\n    },[updatePersist, socket])\r\n\r\n    return (\r\n        <div className=\"newbgi\">\r\n            <div className=\"control-titlebox\">\r\n                <span>Background Upload</span>\r\n            </div>\r\n            <div className=\"TS-opt\">\r\n                <div className=\"newbgi-container\">\r\n                    <input type=\"file\" name={`file_${times}`} onChange={fileSelectionChange} accept=\".jpg,.jpeg,.png\"/>\r\n                    <div className=\"newbgi-fileinfo newbgi-item\">\r\n                        <span>{\"File Name: \"+fileName}</span>\r\n                        <span>{\"File Size: \"+fileSize}</span>\r\n                        <span>{\"File Type: \"+fileType}</span>\r\n                    </div>\r\n                    <div className=\"newbgi-fithoriz\">\r\n                        <input type=\"checkbox\" name=\"ts-opt-3-2\" onChange={fitHorizChange} defaultChecked={fitHorizontal}></input>\r\n                        <label htmlFor=\"ts-opt-3-2\">Fit Horizontal</label>\r\n                    </div>\r\n                    <button onClick={handleSubmission} className=\"newbgi-upload\">Upload Image</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadBGI;","import React, { useEffect, useState, useContext, useCallback } from \"react\";\r\nimport { socketContext } from \"../contexts/socket\";\r\n\r\nfunction TimerDisplay(props: any) {\r\n    const socket = useContext(socketContext);\r\n\r\n    const global: { color: string, size: number, endTxt: string, title: string, endColor: string, titleColor: string, typing: boolean } = props.globalState;\r\n    const updateGlobal: (props: any) => void = props.updateGlobal;\r\n\r\n    const [textSize,setSize] = useState(global.size);\r\n    const [textColor,setColor] = useState(global.color);\r\n    const [endTxt,setETXT] = useState(global.endTxt);\r\n    const [title,setTitle] = useState(global.title);\r\n    const [endColor,setEColor] = useState(global.endColor);\r\n    const [titleColor,setTColor] = useState(global.titleColor);\r\n    const [submitComplete,setComplete] = useState(false);\r\n    const [filled,setFilled] = useState(false);\r\n\r\n    function handleColChange(event: any) {\r\n        let newVal: string = \"\";\r\n        let inVal: string = event.target.value;\r\n        if(inVal.length > 8) { inVal = `${inVal.substring(0,8)}${inVal[inVal.length-1]}`; }\r\n        newVal = inVal.replace(/[^0-9a-f]+/gi,'');\r\n        setColor(newVal);\r\n        updateGlobal({ color: newVal });\r\n    }\r\n\r\n    function handleSizChange(event: any) {\r\n        setSize(event.target.value);\r\n        updateGlobal({ size: event.target.value });\r\n    }\r\n\r\n    function handleEndChange(event: any) {\r\n        setETXT(event.target.value);\r\n        updateGlobal({ endTxt: event.target.value });\r\n    }\r\n\r\n    function handleTitleChange(event: any) {\r\n        setTitle(event.target.value);\r\n        updateGlobal({ title: event.target.value });\r\n    }\r\n\r\n    function handleEColor(event: any) {\r\n        setEColor(event.target.value);\r\n        updateGlobal({ endColor: event.target.value });\r\n    }\r\n\r\n    function handleTColor(event: any) {\r\n        setTColor(event.target.value);\r\n        updateGlobal({ titleColor: event.target.value });\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateGlobal({ color: textColor, size: textSize, endTxt: endTxt, title: title });\r\n        if(textSize === 0 || textColor === \"\" || endTxt === \"\") { setFilled(false); }\r\n        else { setFilled(true); }\r\n    },[textSize,textColor,endTxt,title,setFilled])\r\n\r\n    const submission = useCallback((event: any) => {\r\n        event.preventDefault();\r\n        socket.emit(`updatedisp`,`set ${textColor} ${textSize} ${endColor} ${endTxt}`);\r\n        socket.emit(`title`,`set ${titleColor} ${title}`);\r\n        updateGlobal({ typing: false });\r\n        setComplete(true);\r\n        setTimeout(() => {\r\n            setComplete(false);\r\n        },1000)\r\n    },[socket,textColor,textSize,endTxt,endColor,titleColor,title,setComplete]);\r\n\r\n    const handleSelected = useCallback((event: any) => {\r\n        console.log(`Selected`);\r\n        updateGlobal({ typing: true });\r\n    },[updateGlobal])\r\n\r\n    const handleDeselected = useCallback((event: any) => {\r\n        console.log(`Deselected`);\r\n        updateGlobal({ typing: false });\r\n    },[updateGlobal])\r\n\r\n    useEffect(() => {\r\n        let textboxes = document.getElementsByClassName(\"tmrdsp-txt-nostyle\")\r\n        console.log(`Textbox listeners applied`);\r\n        for (let i = 0; i < textboxes.length; i++) {\r\n            let txtbox = textboxes.item(i);\r\n            if(txtbox !== null) {\r\n                txtbox.addEventListener(\"focusin\", handleSelected);\r\n                txtbox.addEventListener(\"focusout\", handleDeselected);\r\n            }\r\n        };\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"tmrdsp\">\r\n            <div className=\"control-titlebox\"><span>Text Options</span></div>\r\n            <form className=\"TS-opt\" onSubmit={submission}>\r\n                <div className=\"tmrdsp_options\">\r\n                    <div className=\"tmrdsp_fsiz_cont\">\r\n                        <span>Font Size</span>\r\n                        <div className=\"tmrdsp_filler\"></div>\r\n                        <input type=\"number\" name=\"fontSize\" className=\"tmrdsp_fsize\" value={textSize} onChange={handleSizChange}></input>\r\n                    </div>\r\n                    <div className=\"tmrdsp_fcol_cont\">\r\n                        <span>Color</span>\r\n                        <div className=\"tmrdsp_filler\"></div>\r\n                        <input type=\"text\" name=\"color\" onChange={handleColChange} value={textColor} className=\"tmrdsp_fcolr tmrdsp-txt-nostyle\"></input>\r\n                    </div>\r\n                    <div className=\"tmrdsp_etxt_cont\">\r\n                        <div className=\"tmrdsp_span-color\">\r\n                            <span>End Text</span>\r\n                            <div className=\"tmrdsp_filler\"></div>\r\n                            <input type=\"text\" className=\"tmrdsp_etxt_colr tmrdsp-txt-nostyle\" value={endColor} onChange={handleEColor}></input>\r\n                        </div>\r\n                        <input type=\"text\" name=\"endText\" onChange={handleEndChange} value={endTxt} className=\"tmrdsp_etxt tmrdsp-txt-nostyle\"></input>\r\n                    </div>\r\n                    <div className=\"tmrdsp_ttxt_cont\">\r\n                        <div className=\"tmrdsp_span-color\">\r\n                            <span>Title</span>\r\n                            <div className=\"tmrdsp_filler\"></div>\r\n                            <input type=\"text\" className=\"tmrdsp_ttxt_colr tmrdsp-txt-nostyle\" value={titleColor} onChange={handleTColor}></input>\r\n                        </div>\r\n                        <input type=\"text\" name=\"titleText\" onChange={handleTitleChange} value={title} className=\"tmrdsp_ttxt tmrdsp-txt-nostyle\"></input>\r\n                    </div>\r\n                </div>\r\n                <input type=\"submit\" name=\"submit\" value=\"Sync Settings\" className={\"tmrdsp_submit tmrdsp-s-\"+(filled?((submitComplete)?\"enabled-complete\":\"enabled\"):(\"disabled\"))} disabled={!filled || submitComplete}></input>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimerDisplay;","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport NewTime from \"./NewTime\";\r\nimport NewBG from \"./NewBG\";\r\nimport NewBGI from \"./UploadBGI\";\r\nimport TimerDisplay from \"./TimerDisplay\";\r\nimport '../styles/Overlay.css';\r\n\r\nfunction Overlay(props: any) {\r\n    const [toggle,setToggle] = useState(false);\r\n    const [created,setCreated] = useState(toggle);\r\n    const [cooldown,setCooldown] = useState(true);\r\n    const [useShortWidth,setUSW] = useState(true);\r\n\r\n    const [panelNum,setPN] = useState(0);\r\n    const panelAmt = 4;\r\n\r\n    const globalState: { color: string, size: number, endTxt: string, title: string, endColor: string, titleColor: string, typing: boolean } = props.globalState;\r\n    const [bInFullScreen,setBIF] = useState(window.innerHeight < 310);\r\n\r\n    const [newTimeState,setTimeState] = useState({ days: 0, hours: 0, minutes: 0, seconds: 0, timeOpt: 0 });\r\n    const [newBGState,setBGState] = useState({ useImg: false, imageaddr: \"\", solidColor: \"\", fitHorizontal: false });\r\n    const [newTimerDisp,setTimerDisp] = useState({ fontColor: globalState.color, fontSize: globalState.size, endTxt: globalState.endTxt, title: globalState.title });\r\n\r\n    const clickevent = useCallback((event: any) => {\r\n        if(!cooldown) {\r\n            if(globalState.typing === false) {\r\n                if(event.key === \" \") {\r\n                    setToggle(t => !t);\r\n                    setCooldown(true);\r\n                    setTimeout(() => {\r\n                        setCooldown(false);\r\n                    },500)\r\n                };\r\n            };\r\n        };\r\n    },[cooldown,globalState]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keypress', clickevent);\r\n        return () => document.removeEventListener('keypress', clickevent);\r\n    },[clickevent])\r\n\r\n    function closeOverlay() {\r\n        if(!cooldown) {\r\n            if(bInFullScreen) { document.exitFullscreen(); setBIF(false); }\r\n            setToggle(false);\r\n            setCooldown(true);\r\n            setTimeout(() => {\r\n                setCooldown(false);\r\n            },500)\r\n        }\r\n    }\r\n\r\n    function handleClick() {\r\n        if(!toggle && !cooldown) {\r\n            if(window.innerHeight < 310) { document.body.requestFullscreen(); setBIF(true); }\r\n            setToggle(true);\r\n            setCooldown(true);\r\n            setTimeout(() => {\r\n                setCooldown(false);\r\n            },500)\r\n        }\r\n    }\r\n\r\n    const getToggle = useCallback(() => {\r\n        return toggle;\r\n    },[toggle]);\r\n\r\n    useEffect(()=>{\r\n        if(!toggle) {\r\n            setTimeout(()=>{\r\n                setCreated(getToggle());\r\n            },500)\r\n        } else {\r\n            setCreated(getToggle());\r\n        }\r\n    },[toggle,getToggle])\r\n\r\n    const updateTimePersist = useCallback((days: number, hours: number, minutes: number, seconds: number, timeOpt: number) => {\r\n        setTimeState({days: days, hours: hours, minutes: minutes, seconds: seconds, timeOpt: timeOpt});\r\n    },[]);\r\n\r\n    const updateBGPersist = useCallback(( useImg: boolean, imageaddr: string, solidColor: string, fitHorizontal: boolean ) => {\r\n        setBGState({ useImg: useImg, imageaddr: imageaddr, solidColor: solidColor, fitHorizontal: fitHorizontal });\r\n    },[]);\r\n\r\n    const updateBGUPersist = useCallback(( fitHorizontal: boolean ) => {\r\n        updateBGPersist(newBGState.useImg, newBGState.imageaddr, newBGState.solidColor, fitHorizontal);\r\n    },[updateBGPersist, newBGState])\r\n\r\n    const updateTimerDisp = useCallback(( fontColor: string, fontCol: number, endTxt: string, title: string ) => {\r\n        setTimerDisp({fontColor: fontColor, fontSize: fontCol, endTxt: endTxt, title: title});\r\n    },[setTimerDisp])\r\n\r\n    const handlePanelRight = useCallback(() => {\r\n        if(panelNum !== panelAmt-1)\r\n            setPN(panelNum+1);\r\n    },[panelNum]);\r\n\r\n    const handlePanelLeft = useCallback(() => {\r\n        if(panelNum !== 0)\r\n            setPN(panelNum-1);\r\n    },[panelNum]);\r\n\r\n    useEffect(()=>{\r\n        setUSW(window.innerWidth < 600);\r\n        window.addEventListener('resize', () => {\r\n            setUSW(window.innerWidth < 600)\r\n        });\r\n        setTimeout(() => {\r\n            setCooldown(false);\r\n        },500)\r\n    },[]);\r\n\r\n    return (\r\n        <div id=\"overlay\" className={\"overlay\"+((toggle)?(\" overlay_visible\"):(\" overlay_hidden\"))} onClick={handleClick}>\r\n            {created?(\r\n                <div className=\"overlay-container\">\r\n                    <div className=\"overlay-closespace\" onClick={closeOverlay}></div>\r\n                    <div className=\"overlay-controls-container\">\r\n                        <div className=\"overlay-closespace\" onClick={closeOverlay}></div>\r\n                        <div className={\"controls-\"+(useShortWidth?\"tall\":\"norm\")}>\r\n                            {useShortWidth?(\r\n                                \"\"\r\n                            ):(\r\n                                <div className=\"controls-arrow arrow-margin-left\" onClick={handlePanelLeft}>\r\n                                    <div className={\"controls-LA-\"+((panelNum !== 0)?(\"active\"):(\"inactive\"))}></div>\r\n                                </div>\r\n                            )}\r\n                            {useShortWidth?(\r\n                                <div className=\"panel-controls-short\">\r\n                                    <div className=\"panel-controls-short-arrowspace-L\" onClick={handlePanelLeft}>\r\n                                        <div className={\"panel-controls-short-arrow-L-\"+((panelNum !== 0)?(\"active\"):(\"inactive\"))}></div>\r\n                                        <div className={\"panel-controls-short-arrow-L-\"+((panelNum !== 0)?(\"active\"):(\"inactive\"))}></div>\r\n                                    </div>\r\n                                    <div className=\"panel-controls-short-arrowspace-R\" onClick={handlePanelRight}>\r\n                                        <div className={\"panel-controls-short-arrow-R-\"+((panelNum !== panelAmt-1)?(\"active\"):(\"inactive\"))}></div>\r\n                                        <div className={\"panel-controls-short-arrow-R-\"+((panelNum !== panelAmt-1)?(\"active\"):(\"inactive\"))}></div>\r\n                                    </div>\r\n                                </div>\r\n                            ):(\r\n                                \"\"\r\n                            )}\r\n                            <div className=\"controls-mid\">\r\n                                {(panelNum === 0)?(<NewTime persistState={newTimeState} closeOverlay={closeOverlay} changeState={updateTimePersist} globalState={props.globalState} updateGlobal={props.updateGlobal}/>):(\"\")}\r\n                                {(panelNum === 1)?(<NewBG persistState={newBGState} changeState={updateBGPersist} globalState={props.globalState} updateGlobal={props.updateGlobal}/>):(\"\")}\r\n                                {(panelNum === 2)?(<NewBGI horiz={newBGState.fitHorizontal} update={updateBGUPersist} globalState={props.globalState} updateGlobal={props.updateGlobal}/>):(\"\")}\r\n                                {(panelNum === 3)?(<TimerDisplay persistState={newTimerDisp} changeState={updateTimerDisp} globalState={props.globalState} updateGlobal={props.updateGlobal}/>):(\"\")}\r\n                            </div>\r\n                            {(useShortWidth)?(\r\n                                \"\"\r\n                            ):(\r\n                                <div className=\"controls-arrow arrow-margin-right\" onClick={handlePanelRight}>\r\n                                    <div className={\"controls-RA-\"+((panelNum !== panelAmt-1)?(\"active\"):(\"inactive\"))}></div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"overlay-closespace\" onClick={closeOverlay}></div>\r\n                    </div>\r\n                    <div className=\"overlay-closespace\" onClick={closeOverlay}></div>\r\n                </div>\r\n            ):\"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Overlay;","import React from \"react\";\r\nimport { useContext, useState, useEffect, useCallback } from \"react\";\r\nimport { socketContext } from \"./contexts/socket\";\r\nimport './styles/Background.css';\r\n\r\nfunction Background(props: any) {\r\n    const socket = useContext(socketContext);\r\n    const [bgUseImage,setUI] = useState(false);\r\n    const [bgHorizontal,setHorizontal] = useState(false);\r\n    const [bgImage,setImage] = useState(\"\");\r\n    const [bgSolid,setSolid] = useState(\"\");\r\n\r\n    const updateGlobal: (props: any) => void = props.updateGlobal;\r\n\r\n    const handleSConnect = useCallback(() => { socket.emit(`background`,`get`); },[socket])\r\n    const handleSBGChange = useCallback((data: string) => {\r\n        console.log(`[BACKGROUND CHANGE]: ${data}`);\r\n        let args: string[] = data.toLowerCase().split(\" \");\r\n        switch(args[0]) {\r\n            case \"true\":\r\n                if(args[1] === \"true\") {\r\n                    setUI(true);\r\n                    setHorizontal(args[2] === \"true\");\r\n                    args.shift(); args.shift(); args.shift();\r\n                    setImage(`http://${window.location.hostname}:3002/uploads/${args.join(\" \")}`);\r\n                    //setImage(`http://${window.location.hostname}:${window.location.port}/uploads/${args.join(\" \")}`);\r\n                } else if (args[1] === \"false\") {\r\n                    setUI(true);\r\n                    setHorizontal(args[2] === \"true\");\r\n                    args.shift(); args.shift(); args.shift();\r\n                    setImage(args.join(\" \"));\r\n                }\r\n                break;\r\n            case \"false\":\r\n                setUI(false);\r\n                setSolid(args[1]);\r\n                break;\r\n        }\r\n    },[setImage,setSolid,setUI])\r\n\r\n    const handleSBGHU = useCallback((data: any)=>{\r\n        let isTrue: boolean = (data === true);\r\n        setHorizontal(isTrue);\r\n        updateGlobal({bgHorizontal: isTrue});\r\n    },[setHorizontal]);\r\n\r\n    useEffect(() => {\r\n        socket.on(`connect`, handleSConnect);\r\n        socket.on(`background`, handleSBGChange);\r\n        socket.on(`bgHU`, handleSBGHU);\r\n        return () => {\r\n            socket.off(`connect`, handleSConnect);\r\n            socket.off(`background`, handleSBGChange);\r\n            socket.off(`bgHU`, handleSBGHU);\r\n        }\r\n    },[socket, handleSConnect, handleSBGChange, handleSBGHU])\r\n\r\n    return (\r\n        <div className=\"background\">\r\n            {(bgUseImage)\r\n                ?(<img src={bgImage} className={\"background_image-\"+((bgHorizontal)?(\"horizontal\"):(\"vertical\"))} alt={\"Background\"}/>)\r\n                :(<div style={{\r\n                    backgroundColor: `${bgSolid}`,\r\n                    width: \"100%\",\r\n                    height: \"100%\"\r\n                }}></div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Background;","import React from \"react\";\r\nimport video from \"./BlankLoop.mp4\";\r\nimport './NeverSleep.css';\r\n\r\nexport default function NeverSleep(props: any) {\r\n    return (\r\n        <div className=\"neversleep\">\r\n            <video src={video} autoPlay loop width=\"0\" height=\"0\" muted/>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport { socketContext } from \"./contexts/socket\";\r\nimport './styles/title.css';\r\n\r\nexport default function Title(props: any) {\r\n\r\n    // Set Essential Variables.\r\n\r\n    const globalState: { color: string, size: number, endTxt: string, title: string, endColor: string, titleColor: string } = props.globalState;\r\n    const socket = useContext(socketContext);\r\n    const updateGlobal: (props: any) => void = props.updateGlobal;\r\n\r\n    // Socket Handlers\r\n\r\n    const handleSTitle = useCallback((data: string) => {\r\n        let args = data.split(\" \");\r\n        let color = args.shift();\r\n        let newtxt = args.join(\" \");\r\n        console.log(`Title Update`,color,newtxt);\r\n        updateGlobal({ titleColor: color, title: newtxt });\r\n    },[updateGlobal]);\r\n\r\n    const handleSConnect = useCallback(() => { socket.emit(`title`,`get`); },[socket])\r\n\r\n    // Socket Listeners\r\n\r\n    useEffect(() => {\r\n        socket.on(`connect`, handleSConnect);\r\n        socket.on(`title`, handleSTitle);\r\n        return () => {\r\n            socket.off('connect', handleSConnect);\r\n            socket.off('title', handleSTitle);\r\n        }\r\n    },[socket,handleSConnect,handleSTitle])\r\n\r\n    // Elements\r\n\r\n    return (\r\n        <div className=\"title_cont\">\r\n            <span className=\"title_text\" style={{ color: `#${globalState.titleColor}` }}>{globalState.title}</span>\r\n        </div>\r\n    )\r\n}","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport ReactDOM from 'react-dom/client';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport Counter from './Counter';\r\nimport Overlay from './controls/Overlay';\r\nimport Background from './Background';\r\nimport NeverSleep from './NeverSleep/NeverSleep';\r\nimport Title from './Title';\r\nimport {\r\n  socket, socketContext\r\n} from \"./contexts/socket\";\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\n\r\nroot.render(\r\n  <Container />\r\n);\r\n\r\nfunction Container() {\r\n  const [globalState,setGlobalState] = useState({\r\n    color: \"fff\",\r\n    size: 16,\r\n    endTxt: \"END\",\r\n    title: \"TITLE\",\r\n    endColor: \"fff\",\r\n    titleColor: \"fff\",\r\n    typing: false,\r\n    bgHorizontal: false,\r\n    targetTime: (Date.now()-10000)\r\n  });\r\n  const [newChanges,setNC] = useState(new Array<any>());\r\n  const [changing,setChanging] = useState(false);\r\n\r\n  function changeGlobal(props: any) {\r\n    let anyGlobal: any = globalState;\r\n    let temp: any = {}\r\n    Object.keys(globalState).forEach(key => { temp[key] = (anyGlobal)[key]; });\r\n    Object.keys(globalState).forEach(key => { if(props[key] !== undefined) temp[key] = props[key]; });\r\n    setGlobalState(temp);\r\n    // console.log(`Last Global State\\n`,globalState,`\\nInput Values\\n`,props,`\\nUpdated State\\n`,temp);\r\n  }\r\n\r\n  const updateGlobal = useCallback((props: any) => {\r\n    setNC(old => [...old, props])\r\n  },[setGlobalState,globalState])\r\n\r\n  useEffect(() => {\r\n    // console.log(`[GLOBAL STATE]: Update:\\n`,globalState);\r\n    setChanging(false);\r\n  },[globalState])\r\n\r\n  useEffect(() => {\r\n    if(newChanges.length > 0) {\r\n      if(changing) {\r\n        console.log(`[GLOBAL STATE]: Changes to make, but state is currently changing.`);\r\n      } else {\r\n        console.log(`[GLOBAL STATE]: Changes to make, State is not changing. Updating.`);\r\n        setChanging(true);\r\n        changeGlobal(newChanges[0]);\r\n        setNC(old => {\r\n          old.shift();\r\n          return old;\r\n        });\r\n      }\r\n    } else {\r\n      console.log(`[GLOBAL STATE]: No more changes to make.`);\r\n    }\r\n  },[newChanges,changing])\r\n\r\n  return (\r\n    <socketContext.Provider value={socket}>\r\n      <NeverSleep />\r\n      <Background globalState={globalState} updateGlobal={updateGlobal}/>\r\n      <Title globalState={globalState} updateGlobal={updateGlobal}/>\r\n      {/* <App globalState={globalState} updateGlobal={updateGlobal}/> */}\r\n      <Counter globalState={globalState} updateGlobal={updateGlobal}/>\r\n      <Overlay globalState={globalState} updateGlobal={updateGlobal}/>\r\n    </socketContext.Provider>\r\n  )\r\n}"],"sourceRoot":""}