{"version":3,"sources":["NeverSleep/BlankLoop.mp4","contexts/socket.tsx","App.tsx","controls/NewTime.tsx","controls/NewBG.tsx","controls/UploadBGI.tsx","controls/TimerDisplay.tsx","controls/Overlay.tsx","Background.tsx","NeverSleep/NeverSleep.tsx","Title.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","socket","socketio","window","location","hostname","port","socketContext","React","createContext","App","props","_useState","useState","_useState2","Object","slicedToArray","keepAlive","bKA","_useState3","Date","now","_useState4","targetTime","setTarget","_useState5","_useState6","timer","setTimer","useContext","_useState7","_useState8","seconds","setSeconds","_useState9","_useState10","minutes","setMinutes","_useState11","_useState12","hours","setHours","_useState13","_useState14","days","setDays","_useState15","_useState16","systemTimeOffset","setOffset","_useState17","_useState18","pingSent","setSent","_useState19","_useState20","pingRec","setRec","_useState21","_useState22","RTT","setRTT","_useState23","_useState24","fontSize","setFontSize","_useState25","_useState26","endTxt","setEndTxt","globalState","updateGlobal","handlePing","useCallback","PHASE","console","log","concat","useEffect","handleSDisplay","data","args","split","Number","e","replace","length","colr","shift","size","ecol","etxt","join","color","endColor","thetime","unclamped","Math","floor","maxclamp","max","minclamp","min","setTimeout","handleSConnect","emit","handleSDisconnect","reason","handleSPing","handleSTimer","toString","toLowerCase","newtime","newsystime","on","off","addEventListener","changeFontSize","newFontSize","innerWidth","react_default","a","createElement","className","id","style","padStart","NewTime","persisted","persistState","uDays","uHours","uMinutes","uSeconds","timeOpt","timeOption","setTO","setTT","time","updated","sentPing","setSP","serv_time","recPing","setRP","changePersist","changeState","servertime","incH","incM","incS","decH","decM","decS","newTime","handlePersistState","values","handleChangeSet","event","target","checked","getHours","getMinutes","getSeconds","subDay","addDay","d","newDate","getMilliseconds","x","y","startPos","setStartPos","difference","setDifference","dragTarget","setdT","current","dragSeconds","setDragSeconds","dragMinutes","setDragMinutes","_useState27","_useState28","dragHours","setDragHours","_useState29","_useState30","dragDays","setDragDays","dragMoveEvent","touches","clientX","clientY","dragEnd","upTarget","sideTarget","i","abs","onSubmit","preventDefault","closeOverlay","type","name","value","onChange","defaultChecked","htmlFor","onWheel","deltaY","onTouchStart","onTouchMove","onTouchEnd","onClick","getMonth","getDate","NewBG","useImg","setUI","imageaddr","setIMGA","solidColor","setColor","bgHorizontal","fitHorizontal","setHorizontal","ToggleImage","src","alt","newVal","inVal","substring","backgroundColor","UploadBGI","selectedFile","setSelected","fileName","setFileName","fileSize","setFileSize","fileType","setFileType","times","setTimes","horiz","updatePersist","update","fileSelectionChange","t","files","file","handleSubmission","undefined","formData","FormData","append","fetch","method","body","then","result","ok","catch","error","fitHorizChange","accept","TimerDisplay","global","textSize","setSize","textColor","setETXT","title","setTitle","setEColor","titleColor","setTColor","submitComplete","setComplete","filled","setFilled","submission","typing","handleSelected","handleDeselected","textboxes","document","getElementsByClassName","txtbox","item","disabled","Overlay","toggle","setToggle","created","setCreated","cooldown","setCooldown","useShortWidth","setUSW","panelNum","setPN","innerHeight","bInFullScreen","setBIF","newTimeState","setTimeState","newBGState","setBGState","fontColor","newTimerDisp","setTimerDisp","clickevent","key","exitFullscreen","removeEventListener","getToggle","updateTimePersist","updateBGPersist","updateBGUPersist","updateTimerDisp","fontCol","handlePanelRight","panelAmt","handlePanelLeft","requestFullscreen","controls_NewTime","controls_NewBG","controls_UploadBGI","controls_TimerDisplay","Background","bgUseImage","bgImage","setImage","bgSolid","setSolid","handleSBGChange","handleSBGHU","isTrue","width","height","NeverSleep","video","autoPlay","loop","muted","Title","handleSTitle","newtxt","Container","setGlobalState","Array","newChanges","setNC","changing","setChanging","old","toConsumableArray","anyGlobal","temp","keys","forEach","changeGlobal","Provider","NeverSleep_NeverSleep","src_Background","src_App","controls_Overlay","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.0c511926.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BlankLoop.84d5fa3a.mp4\";","import * as socketio from \"socket.io-client\";\r\nimport React from \"react\";\r\nexport const socket = socketio.connect(window.location.hostname+\":\"+window.location.port);\r\n//export const socket = socketio.connect(window.location.hostname+\":3002\");\r\nexport const socketContext = React.createContext(socket);","import React, { useState, useEffect, useContext, useCallback } from 'react';\r\nimport { socketContext } from \"./contexts/socket\";\r\nimport './styles/App.css';\r\n\r\nfunction App(props: any) {\r\n  const [keepAlive,bKA] = useState(false);\r\n\r\n  const [targetTime,setTarget] = useState(Date.now());\r\n  const [timer,setTimer] = useState((targetTime-Date.now())/1000);\r\n  const socket = useContext(socketContext);\r\n\r\n  const [seconds,setSeconds] = useState(0);\r\n  const [minutes,setMinutes] = useState(0);\r\n  const [hours,setHours] = useState(0);\r\n  const [days,setDays] = useState(0);\r\n\r\n  const [systemTimeOffset,setOffset] = useState(0);\r\n  const [pingSent,setSent] = useState(0);\r\n  const [pingRec,setRec] = useState(0);\r\n  const [RTT,setRTT] = useState(0);\r\n\r\n  const [fontSize,setFontSize] = useState(16);\r\n  const [endTxt,setEndTxt] = useState(\"END\");\r\n\r\n  const globalState: { color: string, size: number, endTxt: string, title: string, endColor: string, titleColor: string } = props.globalState;\r\n  const updateGlobal: (props: any) => void = props.updateGlobal;\r\n\r\n  const handlePing = useCallback((PHASE: number) => {\r\n    if(PHASE === 1) {\r\n      console.log(`Sent UTC: ${Date.now()}`);\r\n      setSent(Date.now());\r\n    }\r\n    if(PHASE === 2) {\r\n      console.log(`Recieved UTC: ${Date.now()}`);\r\n      setRec(Date.now());\r\n    }\r\n  },[setSent,setRec]);\r\n\r\n  useEffect(() => {\r\n    if(pingSent !== 0 && pingRec !== 0) {\r\n      setRTT((pingRec-pingSent)/2);\r\n      console.log(`UTC-Offset: ${systemTimeOffset}`);\r\n      console.log(`S: ${pingSent}\\nR: ${pingRec}`);\r\n      console.log(`Round Trip Time: ${pingRec-pingSent}`);\r\n      setOffset(systemTimeOffset-RTT);\r\n      console.log(`Offset: ${systemTimeOffset-RTT}`);\r\n\r\n      setRec(0);\r\n      setSent(0);\r\n    }\r\n  },[RTT,systemTimeOffset,pingSent,pingRec,setRec,setSent])\r\n\r\n  const handleSDisplay = useCallback((data: any) => {\r\n    console.log(`Display Information: ${data}`);\r\n    let args = data.split(\" \");\r\n    try {\r\n      Number(args[1]);\r\n    } catch(e) {\r\n      console.log(`Couldn't interpet display information from server command: ${data}`);\r\n      return;\r\n    }\r\n    args[0] = args[0].replace('#','');\r\n    if(!((args[0].length === 3) || (args[0].length === 4) || (args[0].length === 6) || (args[0].length === 8))) {\r\n      console.log(`Couldn't get colour information from server command: ${data}`);\r\n      return;\r\n    }\r\n    args[2] = args[2].replace('#','');\r\n    if(!((args[2].length === 3) || (args[2].length === 4) || (args[2].length === 6) || (args[2].length === 8))) {\r\n      console.log(`Couldn't get colour information from server command: ${data}`);\r\n      return;\r\n    }\r\n    let colr = args.shift();\r\n    let size = Number(args.shift());\r\n    let ecol = args.shift();\r\n    let etxt = args.join(\" \");\r\n    updateGlobal({ color: colr, size: size, endColor: ecol, endTxt: etxt });\r\n  },[updateGlobal])\r\n\r\n  // Change timer every second. + Sync to system time to avoid skipping numbers.\r\n\r\n  useEffect(() => {\r\n    let thetime = Date.now()+0.5-systemTimeOffset;\r\n    let unclamped = 1000-(thetime/1000-(Math.floor(thetime/1000)))*1000;\r\n    let maxclamp = Math.max(unclamped, 700);\r\n    let minclamp = Math.min(maxclamp, 1300); // 1000ms - offset from last second\r\n\r\n    setTimeout(()=>{\r\n      bKA(!keepAlive);\r\n      setTimer(Math.floor((targetTime-thetime)/1000));\r\n    },minclamp);\r\n  },[setTimer,bKA,keepAlive,targetTime,systemTimeOffset,timer]);\r\n\r\n  // Update counters on timer change.\r\n\r\n  useEffect(() => {\r\n    setDays(Math.floor(timer/(3600*24)));\r\n    setHours(Math.floor(timer/3600)-(Math.floor(timer/(3600*24))*24));\r\n    setMinutes(Math.floor(timer/60)-(Math.floor(timer/3600)*60));\r\n    setSeconds(timer%60);\r\n  },[setDays,setHours,setMinutes,setSeconds,timer])\r\n\r\n  // Socket Connect Event\r\n\r\n  const handleSConnect = useCallback(() => {\r\n    console.log(`Socket Connected.`);\r\n    socket.emit(`updatetimer`,`query`);\r\n    socket.emit(`updatedisp`,`query`);\r\n    socket.emit(`ping`,``);\r\n    handlePing(1);\r\n  },[socket,handlePing])\r\n\r\n  // Socket Disconnect Event\r\n\r\n  const handleSDisconnect = useCallback((reason: any) => {\r\n    console.log(`Socket Disconnect. [${reason}]`);\r\n  },[])\r\n\r\n  // Socket Ping Event\r\n\r\n  const handleSPing = useCallback(() => {\r\n    handlePing(2); // Correct UTC Difference further with adjustment for Ping based on Round-Trip Delay\r\n  },[handlePing])\r\n\r\n  // Socket Timer event\r\n\r\n  const handleSTimer = useCallback((data: any) => {\r\n    console.log(`[TIMER EVENT]: ${data}`);\r\n    let args = data.toString().toLowerCase().split(\" \");\r\n    let newtime: number = Date.now(); // Time to count down to\r\n    let newsystime: number = Date.now(); // Current Time on the server\r\n    try {\r\n      newtime = Number(args[0]);\r\n      newsystime = Number(args[1]);\r\n    } catch(e) {\r\n      console.log(`Failed to convert \\`${data}\\` to Numbers`);\r\n    }\r\n    setTarget(newtime);\r\n    setOffset(Date.now()-newsystime); // Correct for offset in UTC between devices\r\n  },[setTarget,setOffset])\r\n\r\n  // Adding Socket Listeners\r\n\r\n  useEffect(() => {\r\n    socket.on(`connect`, handleSConnect);\r\n    socket.on(`disconnect`, handleSDisconnect);\r\n    socket.on(`ping`, handleSPing);\r\n    socket.on(`timer`, handleSTimer);\r\n    socket.on(`display`, handleSDisplay);\r\n    return () => {\r\n      socket.off('connect', handleSConnect);\r\n      socket.off('disconnect', handleSDisconnect);\r\n      socket.off('ping', handleSPing);\r\n      socket.off('timer', handleSTimer);\r\n      socket.off(`display`, handleSDisplay);\r\n    }\r\n  },[socket,handleSConnect,handleSDisconnect,handleSPing,handleSTimer,handleSDisplay]);\r\n\r\n  window.addEventListener('resize', () => { changeFontSize(); })\r\n\r\n  const changeFontSize = useCallback(() => {\r\n    let newFontSize: number = (window.innerWidth/96)*globalState.size;\r\n    setFontSize(newFontSize)\r\n    setEndTxt(globalState.endTxt);\r\n  },[globalState])\r\n\r\n  useEffect(()=>{ changeFontSize(); },[timer,globalState,changeFontSize])\r\n\r\n  if(timer >= 0) {\r\n    return (\r\n      <div className=\"App\">\r\n        <span id=\"timer\" style={{ fontSize: `${fontSize}px`, color: `#${globalState.color}` }}>\r\n          {(days > 0)?(days.toString().padStart(2,\"0\")+\":\"):\"\"}\r\n          {((days > 0) || (hours > 0))?(hours.toString().padStart(2,\"0\")+\":\"):\"\"}\r\n          {((days > 0) || (hours > 0) || (minutes > 0))?(minutes.toString().padStart(2,\"0\")+\":\"):\"\"}\r\n          {((days > 0) || (hours > 0) || (minutes > 0))?(seconds.toString().padStart(2,\"0\")):(seconds.toString())}\r\n        </span>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"App\">\r\n        <span id=\"timer\" style={{ fontSize: `${fontSize}px`, color: `#${globalState.endColor}` }}>{endTxt}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { useContext, useEffect, useState, useCallback } from \"react\";\r\nimport { socketContext } from \"../contexts/socket\";\r\n\r\nfunction NewTime(props: any) {\r\n\r\n    const persisted: { days: number, hours: number, minutes: number, seconds: number, timeOpt: number } = props.persistState;\r\n    const globalState: any = props.globalState;\r\n    const updateGlobal: (props: any) => void = props.updateGlobal;\r\n\r\n    const [uDays,setDays] = useState(persisted.days);\r\n    const [uHours,setHours] = useState(persisted.hours);\r\n    const [uMinutes,setMinutes] = useState(persisted.minutes);\r\n    const [uSeconds,setSeconds] = useState(persisted.seconds);\r\n    const socket = useContext(socketContext);\r\n    const [timeOption,setTO] = useState(persisted.timeOpt);\r\n    const [targetTime,setTT] = useState(new Date(globalState.targetTime));\r\n\r\n    const [sentPing,setSP] = useState({ time: 0, updated: false });\r\n    const [recPing,setRP] = useState({ time: 0, updated: false, serv_time: 0 });\r\n\r\n    const months = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\"\r\n    ]\r\n\r\n    const changePersist: (days: number, hours: number, minutes: number, seconds: number, timeOpt: number) => void = props.changeState;\r\n\r\n    const handleSPing = useCallback((servertime: number) => {\r\n        setRP({ time: Date.now(), updated: true, serv_time: servertime });\r\n    },[setRP]);\r\n\r\n    useEffect(()=>{\r\n        if(sentPing.updated && recPing.updated) {\r\n            let newTime = Date.now()+((recPing.serv_time-Date.now())-(recPing.time-sentPing.time));\r\n\r\n            newTime += uDays*1000*60*60*24;\r\n            newTime += uHours*1000*60*60;\r\n            newTime += uMinutes*1000*60;\r\n            newTime += uSeconds*1000;\r\n\r\n            socket.emit(`updatetimer`,`set ${newTime}`);\r\n\r\n            setSP({ time: 0, updated: false });\r\n            setRP({ time: 0, updated: false, serv_time: 0 });\r\n        }\r\n    },[sentPing,recPing,uDays,uHours,uMinutes,uSeconds,socket])\r\n\r\n    function handleSubmit(e: any) {\r\n        e.preventDefault();\r\n        if(timeOption === 0) {\r\n            socket.emit(`ping`,`ping`);\r\n            setSP({ time: Date.now(), updated: true });\r\n            props.closeOverlay();\r\n        }\r\n        if(timeOption === 1) {\r\n            let time = new Date();\r\n            let newTime: number = Date.now();\r\n            \r\n            newTime -= time.getHours()*1000*60*60;\r\n            newTime -= time.getMinutes()*1000*60;\r\n            newTime -= time.getSeconds()*1000;\r\n            newTime -= time.getMilliseconds();\r\n\r\n            newTime += uDays*1000*60*60*24;\r\n            newTime += uHours*1000*60*60;\r\n            newTime += uMinutes*1000*60;\r\n            newTime += uSeconds*1000;\r\n\r\n            if(newTime < Date.now()) {\r\n                newTime += 1000*60*60*24;\r\n            }\r\n\r\n            socket.emit(`updatetimer`,`set ${newTime}`);\r\n            updateGlobal({ targetTime: newTime });\r\n            props.closeOverlay();\r\n        }\r\n    };\r\n\r\n    function incH() { if(uHours+1 > 23) { setHours(0); } else setHours(uHours+1); };\r\n    function incM() { if(uMinutes+1 > 59) { setMinutes(0); incH(); } else setMinutes(uMinutes+1); };\r\n    function incS() { if(uSeconds+1 > 59) { setSeconds(0); incM(); } else setSeconds(uSeconds+1); };\r\n    function decH() { if(uHours-1 < 0) { setHours(23); } else setHours(uHours-1); };\r\n    function decM() { if(uMinutes-1 < 0) { setMinutes(59); decH(); } else setMinutes(uMinutes-1); };\r\n    function decS() { if(uSeconds-1 < 0) { setSeconds(59); decM(); } else setSeconds(uSeconds-1); };\r\n\r\n    const handlePersistState = useCallback((values: {\"days\": number, \"hours\": number, \"minutes\": number, \"seconds\": number, \"timeOpt\": number}) => {\r\n        changePersist( values.days, values.hours, values.minutes, values.seconds, values.timeOpt )\r\n    },[changePersist])\r\n\r\n    const handleChangeSet = useCallback((event: any) => {\r\n        if(event.target.checked) {\r\n            let now = new Date();\r\n            setHours(now.getHours());\r\n            setMinutes(now.getMinutes())\r\n            setSeconds(now.getSeconds());\r\n            setTO(1);\r\n        } else {\r\n            setDays(0);\r\n            setHours(0);\r\n            setMinutes(0);\r\n            setSeconds(0);\r\n            setTO(0);\r\n        }\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        socket.on(`ping`,handleSPing);\r\n        return () => {\r\n            socket.off(`ping`,handleSPing);\r\n        }\r\n    },[socket,handleSPing])\r\n\r\n    const subDay = useCallback(() => {\r\n        if(uDays > 0)\r\n            setDays(uDays-1);\r\n        \r\n    },[setDays,uDays])\r\n\r\n    const addDay = useCallback(() => {\r\n        setDays(d => d+1);\r\n    },[setDays])\r\n\r\n    useEffect(() => {\r\n        handlePersistState({\r\n            \"days\": uDays,\r\n            \"hours\": uHours,\r\n            \"minutes\": uMinutes,\r\n            \"seconds\": uSeconds,\r\n            \"timeOpt\": timeOption\r\n        });\r\n\r\n        let newDate = new Date();\r\n        let newTime = Date.now();\r\n\r\n        newTime -= (newDate.getHours()*1000*60*60);\r\n        newTime -= (newDate.getMinutes()*1000*60);\r\n        newTime -= (newDate.getSeconds()*1000);\r\n        newTime -= (newDate.getMilliseconds());\r\n        \r\n        newTime += uDays*1000*60*60*24;\r\n        newTime += uHours*1000*60*60;\r\n        newTime += uMinutes*1000*60;\r\n        newTime += uSeconds*1000;\r\n\r\n        if(timeOption === 1 && ((newTime-Date.now()) < 0)) setDays(d => d+1);\r\n\r\n        setTT(new Date(newTime));\r\n    },[uDays,uHours,uMinutes,uSeconds,timeOption,handlePersistState,setTT,setDays]);\r\n\r\n    function addDayWheel(event: any) {\r\n        if(event.deltaY > 0) subDay();\r\n        else addDay();\r\n    }\r\n\r\n    function addHourWheel(event: any) {\r\n        if(event.deltaY > 0) decH();\r\n        else incH();\r\n    }\r\n\r\n    function addMinuteWheel(event: any) {\r\n        if(event.deltaY > 0) decM();\r\n        else incM();\r\n    }\r\n\r\n    function addSecondWheel(event: any) {\r\n        if(event.deltaY > 0) decS();\r\n        else incS();\r\n    }\r\n\r\n    const [startPos,setStartPos] = useState({ x: 0, y: 0 });\r\n    const [difference,setDifference] = useState({ x: 0, y: 0 });\r\n    const [dragTarget,setdT] = useState(0);\r\n    \r\n    const [dragSeconds,setDragSeconds] = useState({ current: 0, target: 0 });\r\n    const [dragMinutes,setDragMinutes] = useState({ current: 0, target: 0 });\r\n    const [dragHours,setDragHours] = useState({ current: 0, target: 0 });\r\n    const [dragDays,setDragDays] = useState({ current: 0, target: 0 });\r\n\r\n    function secondDragStart(event: any) {\r\n        setStartPos({ x: event.touches[0].clientX, y: event.touches[0].clientY });\r\n        setDragSeconds({ current: 0, target: 0 });\r\n        setdT(1);\r\n    }\r\n\r\n    function minuteDragStart(event: any) {\r\n        setStartPos({ x: event.touches[0].clientX, y: event.touches[0].clientY });\r\n        setDragMinutes({ current: 0, target: 0 });\r\n        setdT(2);\r\n    }\r\n\r\n    function hourDragStart(event: any) {\r\n        setStartPos({ x: event.touches[0].clientX, y: event.touches[0].clientY });\r\n        setDragHours({ current: 0, target: 0 });\r\n        setdT(3);\r\n    }\r\n\r\n    function dayDragStart(event: any) {\r\n        setStartPos({ x: event.touches[0].clientX, y: event.touches[0].clientY });\r\n        setDragDays({ current: 0, target: 0 });\r\n        setdT(4);\r\n    }\r\n\r\n    function dragMoveEvent(event: any) { setDifference({ x: (event.touches[0].clientX-startPos.x), y: (event.touches[0].clientY-startPos.y) }); };\r\n    function dragEnd(event: any) { setdT(0); };\r\n\r\n    useEffect(() => {\r\n        let upTarget = Math.floor(difference.y/-20);\r\n        let sideTarget = Math.floor(difference.x/20);\r\n        switch(dragTarget) {\r\n            case(1):\r\n                for(let i = 0; i < Math.abs(dragSeconds.current-upTarget); i++) {\r\n                    if(dragSeconds.current < upTarget) { incS(); }\r\n                    else { decS(); }\r\n                } setDragSeconds({ current: upTarget, target: upTarget });\r\n                break;\r\n            case(2):\r\n                for(let i = 0; i < Math.abs(dragMinutes.current-upTarget); i++) {\r\n                    if(dragMinutes.current < upTarget) { incM(); }\r\n                    else { decM(); }\r\n                } setDragMinutes({ current: upTarget, target: upTarget });\r\n                break;\r\n            case(3):\r\n                for(let i = 0; i < Math.abs(dragHours.current-upTarget); i++) {\r\n                    if(dragHours.current < upTarget) { incH(); }\r\n                    else { decH(); }\r\n                } setDragHours({ current: upTarget, target: upTarget });\r\n                break;\r\n            case(4):\r\n                for(let i = 0; i < Math.abs(dragDays.current-sideTarget); i++) {\r\n                    if(dragDays.current < sideTarget) { addDay(); }\r\n                    else { subDay(); }\r\n                } setDragDays({ current: sideTarget, target: sideTarget });\r\n                break;\r\n        }\r\n        \r\n    },[difference])\r\n\r\n    return (\r\n        <div className=\"timeSetter\">\r\n            <div className=\"control-titlebox\"><span>Timer Controls</span></div>\r\n            <form className=\"TS-opt\" onSubmit={handleSubmit}>\r\n                <div><input type=\"checkbox\" id=\"ts-opt-1-1\" name={\"ts-opt-1\"} value={\"TFN\"} onChange={handleChangeSet} defaultChecked={(timeOption === 1)}/><label htmlFor=\"ts-opt-1-1\">Set Specific Time</label><br/></div>\r\n                <div className=\"TS-day_select\" onWheel={addDayWheel} onTouchStart={dayDragStart} onTouchMove={dragMoveEvent} onTouchEnd={dragEnd}>\r\n                    <div className=\"TS-day_sub\" onClick={subDay}><span>-</span></div>\r\n                    <div className=\"TS-day_indicator\">\r\n                        {(timeOption === 1)?(<span>{months[targetTime.getMonth()]+\" \"+targetTime.getDate()}</span>):(<span>{uDays} Days</span>)}\r\n                    </div>\r\n                    <div className=\"TS-day_add\" onClick={addDay}><span>+</span></div>\r\n                </div>\r\n                <div className=\"TS-timesel\">\r\n                    <div className=\"TS-sel\" onWheel={addHourWheel} onTouchStart={hourDragStart} onTouchMove={dragMoveEvent} onTouchEnd={dragEnd}>\r\n                        <div className=\"TS-uparrow\" onClick={incH}></div>\r\n                        <span className=\"TS-h\">{uHours.toString().padStart(2,'0')}</span>\r\n                        <div className=\"TS-downarrow\" onClick={decH}></div>\r\n                    </div>\r\n                    <span className=\"TS-selsplitter\">:</span>\r\n                    <div className=\"TS-sel\" onWheel={addMinuteWheel} onTouchStart={minuteDragStart} onTouchMove={dragMoveEvent} onTouchEnd={dragEnd}>\r\n                        <div className=\"TS-uparrow\" onClick={incM}></div>\r\n                        <span className=\"TS-h\">{uMinutes.toString().padStart(2,'0')}</span>\r\n                        <div className=\"TS-downarrow\" onClick={decM}></div>\r\n                    </div>\r\n                    <span className=\"TS-selsplitter\">:</span>\r\n                    <div className=\"TS-sel\" onWheel={addSecondWheel} onTouchStart={secondDragStart} onTouchMove={dragMoveEvent} onTouchEnd={dragEnd}>\r\n                        <div className=\"TS-uparrow\" onClick={incS}></div>\r\n                        <span className=\"TS-h\">{uSeconds.toString().padStart(2,'0')}</span>\r\n                        <div className=\"TS-downarrow\" onClick={decS}></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <input type=\"submit\" value={\"Set Timer\"} className={\"TS-submit\"}></input>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewTime;","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { socketContext } from \"../contexts/socket\";\r\n\r\nfunction NewBG(props: any) {\r\n    const persisted: { useImg: boolean, imageaddr: string, solidColor: string, fitHorizontal: boolean } = props.persistState;\r\n    const globalState: any = props.globalState;\r\n    const updateGlobal: (props: any) => void = props.updateGlobal;\r\n\r\n    const [useImg,setUI] = useState(persisted.useImg);\r\n    const [imageaddr,setIMGA] = useState(persisted.imageaddr);\r\n    const [solidColor,setColor] = useState(persisted.solidColor);\r\n    const [fitHorizontal,setHorizontal] = useState(globalState.bgHorizontal);\r\n    const socket = useContext(socketContext);\r\n\r\n    const changePersist: ( useImg: boolean, imageaddr: string, solidColor: string, fitHorizontal: boolean ) => void = props.changeState;\r\n\r\n    useEffect(() => {\r\n        changePersist(useImg, imageaddr, solidColor, fitHorizontal);\r\n    },[changePersist,useImg,imageaddr,solidColor,fitHorizontal]);\r\n\r\n    function ToggleImage(event: any) { setUI(event.target.checked); }\r\n    function IMGAC(event: any) { setIMGA(event.target.value); }\r\n    function SOLIDCC(event: any) {\r\n        let newVal: string = \"\";\r\n        let inVal: string = event.target.value;\r\n        if(inVal.length > 8) { inVal = `${inVal.substring(0,8)}${inVal[inVal.length-1]}`; }\r\n        newVal = inVal.replace(/[^0-9a-f]+/gi,'');\r\n        setColor(newVal);\r\n    }\r\n\r\n    function submission(event: any) {\r\n        event.preventDefault();\r\n        if(!useImg) {\r\n            if(solidColor !== \"\") {\r\n                console.log(`Requesting Solid Colour Background.`);\r\n                socket.emit(`background`,`set bgi ${useImg} ${solidColor}`);\r\n            }\r\n        } else {\r\n            console.log(`Requesting Image Background.`);\r\n            socket.emit(`background`,`set bgi ${useImg} ${imageaddr}`);\r\n        }\r\n    }\r\n\r\n    function HorizontalFit(event: any) {\r\n        socket.emit(`background`,`set bgh ${event.target.checked}`);\r\n        setHorizontal(event.target.checked);\r\n        updateGlobal({ bgHorizontal: event.target.checked });\r\n    }\r\n\r\n    return (\r\n        <div className=\"newbg\">\r\n            <div className=\"control-titlebox\">\r\n                <span>Background Controls</span>\r\n            </div>\r\n            <form className=\"TS-opt\" onSubmit={submission}>\r\n                {(useImg)?(\r\n                    <div>\r\n                        <input type=\"checkbox\" name={\"Use Images\"} id={\"ts-opt-2-1\"} onChange={ToggleImage} defaultChecked={useImg} />\r\n                        <label htmlFor={\"ts-opt-2-1\"}>Use Image</label><br/>\r\n                        <input type=\"checkbox\" name={\"Horizontal\"} id={\"ts-opt-2-2\"} onChange={HorizontalFit} defaultChecked={fitHorizontal} />\r\n                        <label htmlFor={\"ts-opt-2-2\"}>Fit Horizontal</label>\r\n                    </div>\r\n                ):(\r\n                    <div>\r\n                        <input type=\"checkbox\" name={\"Use Images\"} id={\"ts-opt-2-1\"} onChange={ToggleImage} defaultChecked={useImg}/>\r\n                        <label htmlFor={\"ts-opt-2-1\"}>Use Image</label><br/>\r\n                    </div>\r\n                )}\r\n                {((useImg)?(\r\n                    <div className=\"newbg_image_select\">\r\n                        <div className=\"newbg_image_textbox_container\">\r\n                            <input type=\"text\" value={imageaddr} onChange={IMGAC} className=\"newbg_image_textbox\" />\r\n                        </div>\r\n                        <div className=\"newbg_image_container\">\r\n                            <img src={imageaddr} className=\"newbg_image_preview\" alt={\"Background\"}/>\r\n                        </div>\r\n                    </div>\r\n                ):(\r\n                    <div className=\"newbg_solid_select\">\r\n                        <div><span>#</span><input type=\"text\" className=\"newbg_solid_textbox\" value={solidColor} onChange={SOLIDCC}></input></div>\r\n                        {(solidColor.length === 3 || solidColor.length === 4 || solidColor.length === 6 || solidColor.length === 8)?(\r\n                            <div className=\"newbg_solid_indicator\" style={{ backgroundColor: `#${solidColor}` }}>00:00:00</div>\r\n                        ):(\r\n                            <div className=\"newbg_indicator_fail\">\r\n                                <span className=\"redtext\">INVALID HEX</span>\r\n                                <span className=\"newbg_indicator_explain\">Hex should be 3,4,6 or 8 character long hexadecimal digits. [0-9 and a-f]</span>\r\n                                <span className=\"newbg_indicator_explain\">e.g. 0f0fff, 12ab34cd</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n                <input type=\"submit\" className=\"newbg-submit\" value={\"Set Background\"}/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBG;","import React, { useContext, useCallback, useEffect, useState, SetStateAction, Dispatch } from \"react\";\r\nimport { socketContext } from \"../contexts/socket\";\r\n\r\nfunction UploadBGI(props: any) {\r\n    const socket = useContext(socketContext);\r\n    \r\n    const globalState: any = props.globalState;\r\n    const updateGlobal: () => void = props.updateGlobal;\r\n\r\n    const [selectedFile, setSelected]: [(string | Blob | undefined), Dispatch<SetStateAction<(string | Blob | undefined)>>] = useState();\r\n\r\n    const [fileName,setFileName] = useState(\"\");\r\n    const [fileSize,setFileSize] = useState(0);\r\n    const [fileType,setFileType] = useState(\"\");\r\n\r\n    const [times,setTimes] = useState(0);\r\n\r\n    const [fitHorizontal,setHorizontal] = useState(props.horiz);\r\n    const updatePersist: (state: boolean) => void = props.update;\r\n\r\n    const handleSConnect = useCallback(() => {\r\n        console.log(`[Background Uploader] Connected to server.`);\r\n    },[])\r\n\r\n    const handleSDisconnect = useCallback((reason: any) => {\r\n        console.log(`[Background Uploader] Disconnected from server. [${reason}]`);\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        socket.on('connect',handleSConnect);\r\n        socket.on('disconnect',handleSDisconnect);\r\n        return () => {\r\n            socket.off('connect',handleSConnect);\r\n            socket.off('disconnect',handleSDisconnect);\r\n        };\r\n    },[socket,handleSConnect,handleSDisconnect])\r\n\r\n    const fileSelectionChange = useCallback((event: any) => {\r\n        setTimes(t => t+1);\r\n        if(event.target.files.length === 0) return;\r\n        let file = event.target.files[0];\r\n        setSelected(file);\r\n        setFileName(file.name);\r\n        setFileSize(file.size);\r\n        setFileType(file.type);\r\n    },[])\r\n\r\n    const handleSubmission = useCallback((event: any) => {\r\n        event.preventDefault();\r\n        if(selectedFile === undefined) return;\r\n        const formData = new FormData();\r\n        formData.append('File',selectedFile);\r\n        fetch(\r\n            `http://${window.location.hostname}:${window.location.port}/upload/`,\r\n            {\r\n                method: 'POST',\r\n                body: formData,\r\n            }\r\n        )\r\n            .then((result) => {\r\n                console.log(`${(result.ok)?(\"File Uploaded Successfully.\"):(\"File failed to upload.\")}`);\r\n            })\r\n            .catch((error) => {\r\n                console.log(`There was an Error: ${error}`);\r\n            });\r\n    },[selectedFile])\r\n\r\n    const fitHorizChange = useCallback((event: any) => {\r\n        socket.emit(`background`,`set bgh ${event.target.checked}`);\r\n        setHorizontal(event.target.checked);\r\n        updatePersist(event.target.checked);\r\n    },[updatePersist, socket])\r\n\r\n    return (\r\n        <div className=\"newbgi\">\r\n            <div className=\"control-titlebox\">\r\n                <span>Background Upload</span>\r\n            </div>\r\n            <div className=\"TS-opt\">\r\n                <div className=\"newbgi-container\">\r\n                    <input type=\"file\" name={`file_${times}`} onChange={fileSelectionChange} accept=\".jpg,.jpeg,.png\"/>\r\n                    <div className=\"newbgi-fileinfo newbgi-item\">\r\n                        <span>{\"File Name: \"+fileName}</span>\r\n                        <span>{\"File Size: \"+fileSize}</span>\r\n                        <span>{\"File Type: \"+fileType}</span>\r\n                    </div>\r\n                    <div className=\"newbgi-fithoriz\">\r\n                        <input type=\"checkbox\" name=\"ts-opt-3-2\" onChange={fitHorizChange} defaultChecked={fitHorizontal}></input>\r\n                        <label htmlFor=\"ts-opt-3-2\">Fit Horizontal</label>\r\n                    </div>\r\n                    <button onClick={handleSubmission} className=\"newbgi-upload\">Upload Image</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadBGI;","import React, { useEffect, useState, useContext, useCallback } from \"react\";\r\nimport { socketContext } from \"../contexts/socket\";\r\n\r\nfunction TimerDisplay(props: any) {\r\n    const socket = useContext(socketContext);\r\n\r\n    const global: { color: string, size: number, endTxt: string, title: string, endColor: string, titleColor: string, typing: boolean } = props.globalState;\r\n    const updateGlobal: (props: any) => void = props.updateGlobal;\r\n\r\n    const [textSize,setSize] = useState(global.size);\r\n    const [textColor,setColor] = useState(global.color);\r\n    const [endTxt,setETXT] = useState(global.endTxt);\r\n    const [title,setTitle] = useState(global.title);\r\n    const [endColor,setEColor] = useState(global.endColor);\r\n    const [titleColor,setTColor] = useState(global.titleColor);\r\n    const [submitComplete,setComplete] = useState(false);\r\n    const [filled,setFilled] = useState(false);\r\n\r\n    function handleColChange(event: any) {\r\n        let newVal: string = \"\";\r\n        let inVal: string = event.target.value;\r\n        if(inVal.length > 8) { inVal = `${inVal.substring(0,8)}${inVal[inVal.length-1]}`; }\r\n        newVal = inVal.replace(/[^0-9a-f]+/gi,'');\r\n        setColor(newVal);\r\n        updateGlobal({ color: newVal });\r\n    }\r\n\r\n    function handleSizChange(event: any) {\r\n        setSize(event.target.value);\r\n        updateGlobal({ size: event.target.value });\r\n    }\r\n\r\n    function handleEndChange(event: any) {\r\n        setETXT(event.target.value);\r\n        updateGlobal({ endTxt: event.target.value });\r\n    }\r\n\r\n    function handleTitleChange(event: any) {\r\n        setTitle(event.target.value);\r\n        updateGlobal({ title: event.target.value });\r\n    }\r\n\r\n    function handleEColor(event: any) {\r\n        setEColor(event.target.value);\r\n        updateGlobal({ endColor: event.target.value });\r\n    }\r\n\r\n    function handleTColor(event: any) {\r\n        setTColor(event.target.value);\r\n        updateGlobal({ titleColor: event.target.value });\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateGlobal({ color: textColor, size: textSize, endTxt: endTxt, title: title });\r\n        if(textSize === 0 || textColor === \"\" || endTxt === \"\") { setFilled(false); }\r\n        else { setFilled(true); }\r\n    },[textSize,textColor,endTxt,title,setFilled])\r\n\r\n    const submission = useCallback((event: any) => {\r\n        event.preventDefault();\r\n        socket.emit(`updatedisp`,`set ${textColor} ${textSize} ${endColor} ${endTxt}`);\r\n        socket.emit(`title`,`set ${titleColor} ${title}`);\r\n        updateGlobal({ typing: false });\r\n        setComplete(true);\r\n        setTimeout(() => {\r\n            setComplete(false);\r\n        },1000)\r\n    },[socket,textColor,textSize,endTxt,endColor,titleColor,title,setComplete]);\r\n\r\n    const handleSelected = useCallback((event: any) => {\r\n        console.log(`Selected`);\r\n        updateGlobal({ typing: true });\r\n    },[updateGlobal])\r\n\r\n    const handleDeselected = useCallback((event: any) => {\r\n        console.log(`Deselected`);\r\n        updateGlobal({ typing: false });\r\n    },[updateGlobal])\r\n\r\n    useEffect(() => {\r\n        let textboxes = document.getElementsByClassName(\"tmrdsp-txt-nostyle\")\r\n        console.log(`Textbox listeners applied`);\r\n        for (let i = 0; i < textboxes.length; i++) {\r\n            let txtbox = textboxes.item(i);\r\n            if(txtbox !== null) {\r\n                txtbox.addEventListener(\"focusin\", handleSelected);\r\n                txtbox.addEventListener(\"focusout\", handleDeselected);\r\n            }\r\n        };\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"tmrdsp\">\r\n            <div className=\"control-titlebox\"><span>Text Options</span></div>\r\n            <form className=\"TS-opt\" onSubmit={submission}>\r\n                <div className=\"tmrdsp_options\">\r\n                    <div className=\"tmrdsp_fsiz_cont\">\r\n                        <span>Font Size</span>\r\n                        <div className=\"tmrdsp_filler\"></div>\r\n                        <input type=\"number\" name=\"fontSize\" className=\"tmrdsp_fsize\" value={textSize} onChange={handleSizChange}></input>\r\n                    </div>\r\n                    <div className=\"tmrdsp_fcol_cont\">\r\n                        <span>Color</span>\r\n                        <div className=\"tmrdsp_filler\"></div>\r\n                        <input type=\"text\" name=\"color\" onChange={handleColChange} value={textColor} className=\"tmrdsp_fcolr tmrdsp-txt-nostyle\"></input>\r\n                    </div>\r\n                    <div className=\"tmrdsp_etxt_cont\">\r\n                        <div className=\"tmrdsp_span-color\">\r\n                            <span>End Text</span>\r\n                            <div className=\"tmrdsp_filler\"></div>\r\n                            <input type=\"text\" className=\"tmrdsp_etxt_colr tmrdsp-txt-nostyle\" value={endColor} onChange={handleEColor}></input>\r\n                        </div>\r\n                        <input type=\"text\" name=\"endText\" onChange={handleEndChange} value={endTxt} className=\"tmrdsp_etxt tmrdsp-txt-nostyle\"></input>\r\n                    </div>\r\n                    <div className=\"tmrdsp_ttxt_cont\">\r\n                        <div className=\"tmrdsp_span-color\">\r\n                            <span>Title</span>\r\n                            <div className=\"tmrdsp_filler\"></div>\r\n                            <input type=\"text\" className=\"tmrdsp_ttxt_colr tmrdsp-txt-nostyle\" value={titleColor} onChange={handleTColor}></input>\r\n                        </div>\r\n                        <input type=\"text\" name=\"titleText\" onChange={handleTitleChange} value={title} className=\"tmrdsp_ttxt tmrdsp-txt-nostyle\"></input>\r\n                    </div>\r\n                </div>\r\n                <input type=\"submit\" name=\"submit\" value=\"Sync Settings\" className={\"tmrdsp_submit tmrdsp-s-\"+(filled?((submitComplete)?\"enabled-complete\":\"enabled\"):(\"disabled\"))} disabled={!filled || submitComplete}></input>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimerDisplay;","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport NewTime from \"./NewTime\";\r\nimport NewBG from \"./NewBG\";\r\nimport NewBGI from \"./UploadBGI\";\r\nimport TimerDisplay from \"./TimerDisplay\";\r\nimport '../styles/Overlay.css';\r\n\r\nfunction Overlay(props: any) {\r\n    const [toggle,setToggle] = useState(false);\r\n    const [created,setCreated] = useState(toggle);\r\n    const [cooldown,setCooldown] = useState(true);\r\n    const [useShortWidth,setUSW] = useState(true);\r\n\r\n    const [panelNum,setPN] = useState(0);\r\n    const panelAmt = 4;\r\n\r\n    const globalState: { color: string, size: number, endTxt: string, title: string, endColor: string, titleColor: string, typing: boolean } = props.globalState;\r\n    const [bInFullScreen,setBIF] = useState(window.innerHeight < 310);\r\n\r\n    const [newTimeState,setTimeState] = useState({ days: 0, hours: 0, minutes: 0, seconds: 0, timeOpt: 0 });\r\n    const [newBGState,setBGState] = useState({ useImg: false, imageaddr: \"\", solidColor: \"\", fitHorizontal: false });\r\n    const [newTimerDisp,setTimerDisp] = useState({ fontColor: globalState.color, fontSize: globalState.size, endTxt: globalState.endTxt, title: globalState.title });\r\n\r\n    const clickevent = useCallback((event: any) => {\r\n        if(!cooldown) {\r\n            if(globalState.typing === false) {\r\n                if(event.key === \" \") {\r\n                    setToggle(t => !t);\r\n                    setCooldown(true);\r\n                    setTimeout(() => {\r\n                        setCooldown(false);\r\n                    },500)\r\n                };\r\n            };\r\n        };\r\n    },[cooldown,globalState]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keypress', clickevent);\r\n        return () => document.removeEventListener('keypress', clickevent);\r\n    },[clickevent])\r\n\r\n    function closeOverlay() {\r\n        if(!cooldown) {\r\n            if(bInFullScreen) { document.exitFullscreen(); setBIF(false); }\r\n            setToggle(false);\r\n            setCooldown(true);\r\n            setTimeout(() => {\r\n                setCooldown(false);\r\n            },500)\r\n        }\r\n    }\r\n\r\n    function handleClick() {\r\n        if(!toggle && !cooldown) {\r\n            if(window.innerHeight < 310) { document.body.requestFullscreen(); setBIF(true); }\r\n            setToggle(true);\r\n            setCooldown(true);\r\n            setTimeout(() => {\r\n                setCooldown(false);\r\n            },500)\r\n        }\r\n    }\r\n\r\n    const getToggle = useCallback(() => {\r\n        return toggle;\r\n    },[toggle]);\r\n\r\n    useEffect(()=>{\r\n        if(!toggle) {\r\n            setTimeout(()=>{\r\n                setCreated(getToggle());\r\n            },500)\r\n        } else {\r\n            setCreated(getToggle());\r\n        }\r\n    },[toggle,getToggle])\r\n\r\n    const updateTimePersist = useCallback((days: number, hours: number, minutes: number, seconds: number, timeOpt: number) => {\r\n        setTimeState({days: days, hours: hours, minutes: minutes, seconds: seconds, timeOpt: timeOpt});\r\n    },[]);\r\n\r\n    const updateBGPersist = useCallback(( useImg: boolean, imageaddr: string, solidColor: string, fitHorizontal: boolean ) => {\r\n        setBGState({ useImg: useImg, imageaddr: imageaddr, solidColor: solidColor, fitHorizontal: fitHorizontal });\r\n    },[]);\r\n\r\n    const updateBGUPersist = useCallback(( fitHorizontal: boolean ) => {\r\n        updateBGPersist(newBGState.useImg, newBGState.imageaddr, newBGState.solidColor, fitHorizontal);\r\n    },[updateBGPersist, newBGState])\r\n\r\n    const updateTimerDisp = useCallback(( fontColor: string, fontCol: number, endTxt: string, title: string ) => {\r\n        setTimerDisp({fontColor: fontColor, fontSize: fontCol, endTxt: endTxt, title: title});\r\n    },[setTimerDisp])\r\n\r\n    const handlePanelRight = useCallback(() => {\r\n        if(panelNum !== panelAmt-1)\r\n            setPN(panelNum+1);\r\n    },[panelNum]);\r\n\r\n    const handlePanelLeft = useCallback(() => {\r\n        if(panelNum !== 0)\r\n            setPN(panelNum-1);\r\n    },[panelNum]);\r\n\r\n    useEffect(()=>{\r\n        setUSW(window.innerWidth < 600);\r\n        window.addEventListener('resize', () => {\r\n            setUSW(window.innerWidth < 600)\r\n        });\r\n        setTimeout(() => {\r\n            setCooldown(false);\r\n        },500)\r\n    },[]);\r\n\r\n    return (\r\n        <div id=\"overlay\" className={\"overlay\"+((toggle)?(\" overlay_visible\"):(\" overlay_hidden\"))} onClick={handleClick}>\r\n            {created?(\r\n                <div className=\"overlay-container\">\r\n                    <div className=\"overlay-closespace\" onClick={closeOverlay}></div>\r\n                    <div className=\"overlay-controls-container\">\r\n                        <div className=\"overlay-closespace\" onClick={closeOverlay}></div>\r\n                        <div className={\"controls-\"+(useShortWidth?\"tall\":\"norm\")}>\r\n                            {useShortWidth?(\r\n                                \"\"\r\n                            ):(\r\n                                <div className=\"controls-arrow arrow-margin-left\" onClick={handlePanelLeft}>\r\n                                    <div className={\"controls-LA-\"+((panelNum !== 0)?(\"active\"):(\"inactive\"))}></div>\r\n                                </div>\r\n                            )}\r\n                            {useShortWidth?(\r\n                                <div className=\"panel-controls-short\">\r\n                                    <div className=\"panel-controls-short-arrowspace-L\" onClick={handlePanelLeft}>\r\n                                        <div className={\"panel-controls-short-arrow-L-\"+((panelNum !== 0)?(\"active\"):(\"inactive\"))}></div>\r\n                                        <div className={\"panel-controls-short-arrow-L-\"+((panelNum !== 0)?(\"active\"):(\"inactive\"))}></div>\r\n                                    </div>\r\n                                    <div className=\"panel-controls-short-arrowspace-R\" onClick={handlePanelRight}>\r\n                                        <div className={\"panel-controls-short-arrow-R-\"+((panelNum !== panelAmt-1)?(\"active\"):(\"inactive\"))}></div>\r\n                                        <div className={\"panel-controls-short-arrow-R-\"+((panelNum !== panelAmt-1)?(\"active\"):(\"inactive\"))}></div>\r\n                                    </div>\r\n                                </div>\r\n                            ):(\r\n                                \"\"\r\n                            )}\r\n                            <div className=\"controls-mid\">\r\n                                {(panelNum === 0)?(<NewTime persistState={newTimeState} closeOverlay={closeOverlay} changeState={updateTimePersist} globalState={props.globalState} updateGlobal={props.updateGlobal}/>):(\"\")}\r\n                                {(panelNum === 1)?(<NewBG persistState={newBGState} changeState={updateBGPersist} globalState={props.globalState} updateGlobal={props.updateGlobal}/>):(\"\")}\r\n                                {(panelNum === 2)?(<NewBGI horiz={newBGState.fitHorizontal} update={updateBGUPersist} globalState={props.globalState} updateGlobal={props.updateGlobal}/>):(\"\")}\r\n                                {(panelNum === 3)?(<TimerDisplay persistState={newTimerDisp} changeState={updateTimerDisp} globalState={props.globalState} updateGlobal={props.updateGlobal}/>):(\"\")}\r\n                            </div>\r\n                            {(useShortWidth)?(\r\n                                \"\"\r\n                            ):(\r\n                                <div className=\"controls-arrow arrow-margin-right\" onClick={handlePanelRight}>\r\n                                    <div className={\"controls-RA-\"+((panelNum !== panelAmt-1)?(\"active\"):(\"inactive\"))}></div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"overlay-closespace\" onClick={closeOverlay}></div>\r\n                    </div>\r\n                    <div className=\"overlay-closespace\" onClick={closeOverlay}></div>\r\n                </div>\r\n            ):\"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Overlay;","import React from \"react\";\r\nimport { useContext, useState, useEffect, useCallback } from \"react\";\r\nimport { socketContext } from \"./contexts/socket\";\r\nimport './styles/Background.css';\r\n\r\nfunction Background(props: any) {\r\n    const socket = useContext(socketContext);\r\n    const [bgUseImage,setUI] = useState(false);\r\n    const [bgHorizontal,setHorizontal] = useState(false);\r\n    const [bgImage,setImage] = useState(\"\");\r\n    const [bgSolid,setSolid] = useState(\"\");\r\n\r\n    const updateGlobal: (props: any) => void = props.updateGlobal;\r\n\r\n    const handleSConnect = useCallback(() => { socket.emit(`background`,`get`); },[socket])\r\n    const handleSBGChange = useCallback((data: string) => {\r\n        console.log(`[BACKGROUND CHANGE]: ${data}`);\r\n        let args: string[] = data.toLowerCase().split(\" \");\r\n        switch(args[0]) {\r\n            case \"true\":\r\n                if(args[1] === \"true\") {\r\n                    setUI(true);\r\n                    setHorizontal(args[2] === \"true\");\r\n                    args.shift(); args.shift(); args.shift();\r\n                    //setImage(`http://${window.location.hostname}:3002/uploads/${args.join(\" \")}`);\r\n                    setImage(`http://${window.location.hostname}:${window.location.port}/uploads/${args.join(\" \")}`);\r\n                } else if (args[1] === \"false\") {\r\n                    setUI(true);\r\n                    setHorizontal(args[2] === \"true\");\r\n                    args.shift(); args.shift(); args.shift();\r\n                    setImage(args.join(\" \"));\r\n                }\r\n                break;\r\n            case \"false\":\r\n                setUI(false);\r\n                setSolid(args[1]);\r\n                break;\r\n        }\r\n    },[setImage,setSolid,setUI])\r\n\r\n    const handleSBGHU = useCallback((data: any)=>{\r\n        let isTrue: boolean = (data === true);\r\n        setHorizontal(isTrue);\r\n        updateGlobal({bgHorizontal: isTrue});\r\n    },[setHorizontal]);\r\n\r\n    useEffect(() => {\r\n        socket.on(`connect`, handleSConnect);\r\n        socket.on(`background`, handleSBGChange);\r\n        socket.on(`bgHU`, handleSBGHU);\r\n        return () => {\r\n            socket.off(`connect`, handleSConnect);\r\n            socket.off(`background`, handleSBGChange);\r\n            socket.off(`bgHU`, handleSBGHU);\r\n        }\r\n    },[socket, handleSConnect, handleSBGChange, handleSBGHU])\r\n\r\n    return (\r\n        <div className=\"background\">\r\n            {(bgUseImage)\r\n                ?(<img src={bgImage} className={\"background_image-\"+((bgHorizontal)?(\"horizontal\"):(\"vertical\"))} alt={\"Background\"}/>)\r\n                :(<div style={{\r\n                    backgroundColor: `${bgSolid}`,\r\n                    width: \"100%\",\r\n                    height: \"100%\"\r\n                }}></div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Background;","import React from \"react\";\r\nimport video from \"./BlankLoop.mp4\";\r\nimport './NeverSleep.css';\r\n\r\nexport default function NeverSleep(props: any) {\r\n    return (\r\n        <div className=\"neversleep\">\r\n            <video src={video} autoPlay loop width=\"0\" height=\"0\" muted/>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport { socketContext } from \"./contexts/socket\";\r\nimport './styles/title.css';\r\n\r\nexport default function Title(props: any) {\r\n\r\n    // Set Essential Variables.\r\n\r\n    const globalState: { color: string, size: number, endTxt: string, title: string, endColor: string, titleColor: string } = props.globalState;\r\n    const socket = useContext(socketContext);\r\n    const updateGlobal: (props: any) => void = props.updateGlobal;\r\n\r\n    // Socket Handlers\r\n\r\n    const handleSTitle = useCallback((data: string) => {\r\n        let args = data.split(\" \");\r\n        let color = args.shift();\r\n        let newtxt = args.join(\" \");\r\n        console.log(`Title Update`,color,newtxt);\r\n        updateGlobal({ titleColor: color, title: newtxt });\r\n    },[updateGlobal]);\r\n\r\n    const handleSConnect = useCallback(() => { socket.emit(`title`,`get`); },[socket])\r\n\r\n    // Socket Listeners\r\n\r\n    useEffect(() => {\r\n        socket.on(`connect`, handleSConnect);\r\n        socket.on(`title`, handleSTitle);\r\n        return () => {\r\n            socket.off('connect', handleSConnect);\r\n            socket.off('title', handleSTitle);\r\n        }\r\n    },[socket,handleSConnect,handleSTitle])\r\n\r\n    // Elements\r\n\r\n    return (\r\n        <div className=\"title_cont\">\r\n            <span className=\"title_text\" style={{ color: `#${globalState.titleColor}` }}>{globalState.title}</span>\r\n        </div>\r\n    )\r\n}","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport ReactDOM from 'react-dom/client';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport Counter from './Counter';\r\nimport Overlay from './controls/Overlay';\r\nimport Background from './Background';\r\nimport NeverSleep from './NeverSleep/NeverSleep';\r\nimport Title from './Title';\r\nimport {\r\n  socket, socketContext\r\n} from \"./contexts/socket\";\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\n\r\nroot.render(\r\n  <Container />\r\n);\r\n\r\nfunction Container() {\r\n  const [globalState,setGlobalState] = useState({\r\n    color: \"fff\",\r\n    size: 16,\r\n    endTxt: \"END\",\r\n    title: \"TITLE\",\r\n    endColor: \"fff\",\r\n    titleColor: \"fff\",\r\n    typing: false,\r\n    bgHorizontal: false,\r\n    targetTime: (Date.now()-10000)\r\n  });\r\n  const [newChanges,setNC] = useState(new Array<any>());\r\n  const [changing,setChanging] = useState(false);\r\n\r\n  function changeGlobal(props: any) {\r\n    let anyGlobal: any = globalState;\r\n    let temp: any = {}\r\n    Object.keys(globalState).forEach(key => { temp[key] = (anyGlobal)[key]; });\r\n    Object.keys(globalState).forEach(key => { if(props[key] !== undefined) temp[key] = props[key]; });\r\n    setGlobalState(temp);\r\n    // console.log(`Last Global State\\n`,globalState,`\\nInput Values\\n`,props,`\\nUpdated State\\n`,temp);\r\n  }\r\n\r\n  const updateGlobal = useCallback((props: any) => {\r\n    setNC(old => [...old, props])\r\n  },[setGlobalState,globalState])\r\n\r\n  useEffect(() => {\r\n    // console.log(`[GLOBAL STATE]: Update:\\n`,globalState);\r\n    setChanging(false);\r\n  },[globalState])\r\n\r\n  useEffect(() => {\r\n    if(newChanges.length > 0) {\r\n      if(changing) {\r\n        console.log(`[GLOBAL STATE]: Changes to make, but state is currently changing.`);\r\n      } else {\r\n        console.log(`[GLOBAL STATE]: Changes to make, State is not changing. Updating.`);\r\n        setChanging(true);\r\n        changeGlobal(newChanges[0]);\r\n        setNC(old => {\r\n          old.shift();\r\n          return old;\r\n        });\r\n      }\r\n    } else {\r\n      console.log(`[GLOBAL STATE]: No more changes to make.`);\r\n    }\r\n  },[newChanges,changing])\r\n\r\n  return (\r\n    <socketContext.Provider value={socket}>\r\n      <NeverSleep />\r\n      <Background globalState={globalState} updateGlobal={updateGlobal}/>\r\n      <Title globalState={globalState} updateGlobal={updateGlobal}/>\r\n      <App globalState={globalState} updateGlobal={updateGlobal}/>\r\n      {/* <Counter globalState={globalState} updateGlobal={updateGlobal}/> */}\r\n      <Overlay globalState={globalState} updateGlobal={updateGlobal}/>\r\n    </socketContext.Provider>\r\n  )\r\n}"],"sourceRoot":""}